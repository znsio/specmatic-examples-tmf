openapi: 3.0.1
info:
  title: Payment
  description: >-
    This API provides the standardized client interface to Payment Systems for managing performed
    payments or refunds. Examples of Payment API originators (clients) include Web servers, mobile
    app servers, Contact center dashboards or retail store systems.
  version: 5.0.0
servers:
  - url: '{apiRoot}'
    variables:
      apiRoot:
        default: 'https://serverRootserverRoot/paymentManagement/v5'
        enum:
          - 'https://serverRootserverRoot/paymentManagement/v5'
tags:
  - name: payment
    description: Operations for Payment Resource
  - name: authorizePayment
    description: Operations for AuthorizePayment Resource
  - name: initiatePayment
    description: Operations for InitiatePayment Resource
  - name: cancelAuthorizedPayment
    description: Operations for CancelAuthorizedPayment Resource
  - name: refund
    description: Operations for Refund Resource
  - name: notification listener
    description: Notifications for Resource Lifecycle and event notifications
  - name: events subscription
    description: Endpoints to register and terminate an Event Listener
paths:
  /authorizePayment:
    get:
      tags:
        - authorizePayment
      summary: List or find AuthorizePayment objects
      description: List or find AuthorizePayment objects
      operationId: listAuthorizePayment
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Before'
        - $ref: '#/components/parameters/After'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Filter'
      responses:
        '200':
          $ref: '#/components/responses/200AuthorizePaymentArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - authorizePayment
      summary: Creates a AuthorizePayment
      description: This operation creates a AuthorizePayment entity.
      operationId: createAuthorizePayment
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/AuthorizePayment_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201AuthorizePayment'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/authorizePayment/{id}':
    get:
      tags:
        - authorizePayment
      summary: Retrieves a AuthorizePayment by ID
      description: >-
        This operation retrieves a AuthorizePayment entity. Attribute selection enabled for all
        first level attributes.
      operationId: retrieveAuthorizePayment
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200AuthorizePayment_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  /cancelAuthorizedPayment:
    get:
      tags:
        - cancelAuthorizedPayment
      summary: List or find CancelAuthorizedPayment objects
      description: List or find CancelAuthorizedPayment objects
      operationId: listCancelAuthorizedPayment
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Before'
        - $ref: '#/components/parameters/After'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Filter'
      responses:
        '200':
          $ref: '#/components/responses/200CancelAuthorizedPaymentArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - cancelAuthorizedPayment
      summary: Creates a CancelAuthorizedPayment
      description: This operation creates a CancelAuthorizedPayment entity.
      operationId: createCancelAuthorizedPayment
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/CancelAuthorizedPayment_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201CancelAuthorizedPayment'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/cancelAuthorizedPayment/{id}':
    get:
      tags:
        - cancelAuthorizedPayment
      summary: Retrieves a CancelAuthorizedPayment by ID
      description: >-
        This operation retrieves a CancelAuthorizedPayment entity. Attribute selection enabled for
        all first level attributes.
      operationId: retrieveCancelAuthorizedPayment
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200CancelAuthorizedPayment_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  /hub:
    post:
      operationId: createHub
      summary: Create a subscription (hub) to receive Events
      description: Sets the communication endpoint to receive Events.
      tags:
        - events subscription
      requestBody:
        $ref: '#/components/requestBodies/Hub_FVO'
      responses:
        '201':
          $ref: '#/components/responses/Hub'
        default:
          $ref: '#/components/responses/Error'
  '/hub/{id}':
    get:
      operationId: hubGet
      summary: Retrieve a subscription (hub)
      description: This operation retrieves the subscription to receive Events.
      tags:
        - events subscription
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          $ref: '#/components/responses/Hub'
        default:
          $ref: '#/components/responses/Error'
    delete:
      operationId: hubDelete
      summary: Remove a subscription (hub) to receive Events
      description: This operation removes the subscription to receive Events.
      tags:
        - events subscription
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '204':
          description: Deleted
        default:
          $ref: '#/components/responses/Error'
  /initiatePayment:
    get:
      tags:
        - initiatePayment
      summary: List or find InitiatePayment objects
      description: List or find InitiatePayment objects
      operationId: listInitiatePayment
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Before'
        - $ref: '#/components/parameters/After'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Filter'
      responses:
        '200':
          $ref: '#/components/responses/200InitiatePaymentArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - initiatePayment
      summary: Creates a InitiatePayment
      description: This operation creates a InitiatePayment entity.
      operationId: createInitiatePayment
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/InitiatePayment_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201InitiatePayment'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/initiatePayment/{id}':
    get:
      tags:
        - initiatePayment
      summary: Retrieves a InitiatePayment by ID
      description: >-
        This operation retrieves a InitiatePayment entity. Attribute selection enabled for all first
        level attributes.
      operationId: retrieveInitiatePayment
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200InitiatePayment_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  /listener/authorizePaymentAuthorizePaymentAttributeValueChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity AuthorizePaymentAuthorizePaymentAttributeValueChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        AuthorizePaymentAuthorizePaymentAttributeValueChangeEvent
      operationId: authorizePaymentAuthorizePaymentAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/AuthorizePaymentAuthorizePaymentAttributeValueChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/authorizePaymentAuthorizePaymentCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity AuthorizePaymentAuthorizePaymentCreateEvent
      description: >-
        Example of a client listener for receiving the notification
        AuthorizePaymentAuthorizePaymentCreateEvent
      operationId: authorizePaymentAuthorizePaymentCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/AuthorizePaymentAuthorizePaymentCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/authorizePaymentAuthorizePaymentDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity AuthorizePaymentAuthorizePaymentDeleteEvent
      description: >-
        Example of a client listener for receiving the notification
        AuthorizePaymentAuthorizePaymentDeleteEvent
      operationId: authorizePaymentAuthorizePaymentDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/AuthorizePaymentAuthorizePaymentDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/authorizePaymentAuthorizePaymentStateChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity AuthorizePaymentAuthorizePaymentStateChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        AuthorizePaymentAuthorizePaymentStateChangeEvent
      operationId: authorizePaymentAuthorizePaymentStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/AuthorizePaymentAuthorizePaymentStateChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/cancelAuthorizedPaymentCancelAuthorizedPaymentAttributeValueChangeEvent:
    post:
      tags:
        - notification listener
      summary: >-
        Client listener for entity
        CancelAuthorizedPaymentCancelAuthorizedPaymentAttributeValueChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        CancelAuthorizedPaymentCancelAuthorizedPaymentAttributeValueChangeEvent
      operationId: cancelAuthorizedPaymentCancelAuthorizedPaymentAttributeValueChangeEvent
      requestBody:
        $ref: >-
          #/components/requestBodies/CancelAuthorizedPaymentCancelAuthorizedPaymentAttributeValueChangeEvent
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/cancelAuthorizedPaymentCancelAuthorizedPaymentCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity CancelAuthorizedPaymentCancelAuthorizedPaymentCreateEvent
      description: >-
        Example of a client listener for receiving the notification
        CancelAuthorizedPaymentCancelAuthorizedPaymentCreateEvent
      operationId: cancelAuthorizedPaymentCancelAuthorizedPaymentCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/CancelAuthorizedPaymentCancelAuthorizedPaymentCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/cancelAuthorizedPaymentCancelAuthorizedPaymentDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity CancelAuthorizedPaymentCancelAuthorizedPaymentDeleteEvent
      description: >-
        Example of a client listener for receiving the notification
        CancelAuthorizedPaymentCancelAuthorizedPaymentDeleteEvent
      operationId: cancelAuthorizedPaymentCancelAuthorizedPaymentDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/CancelAuthorizedPaymentCancelAuthorizedPaymentDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/cancelAuthorizedPaymentCancelAuthorizedPaymentStateChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity CancelAuthorizedPaymentCancelAuthorizedPaymentStateChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        CancelAuthorizedPaymentCancelAuthorizedPaymentStateChangeEvent
      operationId: cancelAuthorizedPaymentCancelAuthorizedPaymentStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/CancelAuthorizedPaymentCancelAuthorizedPaymentStateChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/initiatePaymentInitiatePaymentAttributeValueChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity InitiatePaymentInitiatePaymentAttributeValueChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        InitiatePaymentInitiatePaymentAttributeValueChangeEvent
      operationId: initiatePaymentInitiatePaymentAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/InitiatePaymentInitiatePaymentAttributeValueChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/initiatePaymentInitiatePaymentCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity InitiatePaymentInitiatePaymentCreateEvent
      description: >-
        Example of a client listener for receiving the notification
        InitiatePaymentInitiatePaymentCreateEvent
      operationId: initiatePaymentInitiatePaymentCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/InitiatePaymentInitiatePaymentCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/initiatePaymentInitiatePaymentDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity InitiatePaymentInitiatePaymentDeleteEvent
      description: >-
        Example of a client listener for receiving the notification
        InitiatePaymentInitiatePaymentDeleteEvent
      operationId: initiatePaymentInitiatePaymentDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/InitiatePaymentInitiatePaymentDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/initiatePaymentInitiatePaymentStateChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity InitiatePaymentInitiatePaymentStateChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        InitiatePaymentInitiatePaymentStateChangeEvent
      operationId: initiatePaymentInitiatePaymentStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/InitiatePaymentInitiatePaymentStateChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/paymentPaymentAttributeValueChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity PaymentPaymentAttributeValueChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        PaymentPaymentAttributeValueChangeEvent
      operationId: paymentPaymentAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/PaymentPaymentAttributeValueChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/paymentPaymentCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity PaymentPaymentCreateEvent
      description: Example of a client listener for receiving the notification PaymentPaymentCreateEvent
      operationId: paymentPaymentCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/PaymentPaymentCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/paymentPaymentDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity PaymentPaymentDeleteEvent
      description: Example of a client listener for receiving the notification PaymentPaymentDeleteEvent
      operationId: paymentPaymentDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/PaymentPaymentDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/paymentPaymentStateChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity PaymentPaymentStateChangeEvent
      description: Example of a client listener for receiving the notification PaymentPaymentStateChangeEvent
      operationId: paymentPaymentStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/PaymentPaymentStateChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/refundAttributeValueChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity RefundAttributeValueChangeEvent
      description: Example of a client listener for receiving the notification RefundAttributeValueChangeEvent
      operationId: refundAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/RefundAttributeValueChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/refundCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity RefundCreateEvent
      description: Example of a client listener for receiving the notification RefundCreateEvent
      operationId: refundCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/RefundCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/refundDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity RefundDeleteEvent
      description: Example of a client listener for receiving the notification RefundDeleteEvent
      operationId: refundDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/RefundDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/refundStateChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity RefundStateChangeEvent
      description: Example of a client listener for receiving the notification RefundStateChangeEvent
      operationId: refundStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/RefundStateChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /payment:
    get:
      tags:
        - payment
      summary: List or find Payment objects
      description: List or find Payment objects
      operationId: listPayment
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Before'
        - $ref: '#/components/parameters/After'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Filter'
      responses:
        '200':
          $ref: '#/components/responses/200PaymentArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - payment
      summary: Creates a Payment
      description: This operation creates a Payment entity.
      operationId: createPayment
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/Payment_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201Payment'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/payment/{id}':
    get:
      tags:
        - payment
      summary: Retrieves a Payment by ID
      description: >-
        This operation retrieves a Payment entity. Attribute selection enabled for all first level
        attributes.
      operationId: retrievePayment
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200Payment_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  /refund:
    get:
      tags:
        - refund
      summary: List or find Refund objects
      description: List or find Refund objects
      operationId: listRefund
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Before'
        - $ref: '#/components/parameters/After'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Filter'
      responses:
        '200':
          $ref: '#/components/responses/200RefundArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - refund
      summary: Creates a Refund
      description: This operation creates a Refund entity.
      operationId: createRefund
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/Refund_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201Refund'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/refund/{id}':
    get:
      tags:
        - refund
      summary: Retrieves a Refund by ID
      description: >-
        This operation retrieves a Refund entity. Attribute selection enabled for all first level
        attributes.
      operationId: retrieveRefund
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200Refund_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
components:
  schemas:
    AccountRef:
      type: object
      description: Account reference. A account may be a party account or a financial account.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AccountRef: '#/components/schemas/AccountRef'
    AccountRef_FVO:
      type: object
      description: Account reference. A account may be a party account or a financial account.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AccountRef: '#/components/schemas/AccountRef_FVO'
    Addressable:
      type: object
      description: Base schema for addressable entities
      properties:
        href:
          type: string
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
    AgreementRef:
      type: object
      description: >-
        Agreement reference. An agreement represents a contract or arrangement, either written or
        verbal and sometimes enforceable by law, such as a service level agreement or a customer
        price agreement. An agreement involves a number of other business entities, such as
        products, services, and resources and/or their specifications.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementRef: '#/components/schemas/AgreementRef'
    AgreementRef_FVO:
      type: object
      description: >-
        Agreement reference. An agreement represents a contract or arrangement, either written or
        verbal and sometimes enforceable by law, such as a service level agreement or a customer
        price agreement. An agreement involves a number of other business entities, such as
        products, services, and resources and/or their specifications.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementRef: '#/components/schemas/AgreementRef_FVO'
    Attachment:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'https://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment'
    AttachmentRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment'
        - $ref: '#/components/schemas/AttachmentRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment'
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment_FVO'
        - $ref: '#/components/schemas/AttachmentRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
          AttachmentRef: '#/components/schemas/AttachmentRef_FVO'
    AttachmentRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef_FVO'
    Attachment_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'https://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
          required:
            - attachmentType
            - mimeType
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
    AuthorizePayment:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Task resource for operation authorize payment
          properties:
            id:
              description: The identifier of the task
              type: string
            href:
              description: A reference to the task
              type: string
            state:
              description: Current state of the operation task
              type: string
              enum:
                - acknowledged
                - terminatedWithError
                - inProgress
                - done
                - cancel
                - canceled
            authorizePaymentDate:
              description: date of the operation authorize payment
              type: string
              format: date-time
            authorizedPaymentDate:
              description: date when the operation was authorized
              type: string
              format: date-time
            authorizedPayment:
              $ref: '#/components/schemas/PaymentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          AuthorizePayment: '#/components/schemas/AuthorizePayment'
    AuthorizePaymentAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: AuthorizePaymentAttributeValueChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/AuthorizePaymentAttributeValueChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          AuthorizePaymentAttributeValueChangeEvent: '#/components/schemas/AuthorizePaymentAttributeValueChangeEvent'
    AuthorizePaymentAttributeValueChangeEventPayload:
      type: object
      description: AuthorizePaymentAttributeValueChangeEventPayload generic structure
      properties:
        authorizePayment:
          $ref: '#/components/schemas/AuthorizePayment'
    AuthorizePaymentCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: AuthorizePaymentCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/AuthorizePaymentCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          AuthorizePaymentCreateEvent: '#/components/schemas/AuthorizePaymentCreateEvent'
    AuthorizePaymentCreateEventPayload:
      type: object
      description: AuthorizePaymentCreateEventPayload generic structure
      properties:
        authorizePayment:
          $ref: '#/components/schemas/AuthorizePayment'
    AuthorizePaymentDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: AuthorizePaymentDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/AuthorizePaymentDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          AuthorizePaymentDeleteEvent: '#/components/schemas/AuthorizePaymentDeleteEvent'
    AuthorizePaymentDeleteEventPayload:
      type: object
      description: AuthorizePaymentDeleteEventPayload generic structure
      properties:
        authorizePayment:
          $ref: '#/components/schemas/AuthorizePayment'
    AuthorizePaymentRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: 'Operation to payment authorization, prior to payment capture.'
          properties:
            name:
              type: string
              description: A name for the payment authorization
      discriminator:
        propertyName: '@type'
        mapping:
          AuthorizePaymentRef: '#/components/schemas/AuthorizePaymentRef'
    AuthorizePaymentRefOrValue:
      description: A payment authorization provided by reference or by value
      oneOf:
        - $ref: '#/components/schemas/AuthorizePaymentRef'
        - $ref: '#/components/schemas/AuthorizePayment'
      discriminator:
        propertyName: '@type'
        mapping:
          AuthorizePayment: '#/components/schemas/AuthorizePayment'
          AuthorizePaymentRef: '#/components/schemas/AuthorizePaymentRef'
    AuthorizePaymentRefOrValue_FVO:
      description: A payment authorization provided by reference or by value
      oneOf:
        - $ref: '#/components/schemas/AuthorizePaymentRef_FVO'
        - $ref: '#/components/schemas/AuthorizePayment_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          AuthorizePayment: '#/components/schemas/AuthorizePayment_FVO'
          AuthorizePaymentRef: '#/components/schemas/AuthorizePaymentRef_FVO'
    AuthorizePaymentRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: 'Operation to payment authorization, prior to payment capture.'
          properties:
            name:
              type: string
              description: A name for the payment authorization
      discriminator:
        propertyName: '@type'
        mapping:
          AuthorizePaymentRef: '#/components/schemas/AuthorizePaymentRef_FVO'
    AuthorizePaymentStateChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: AuthorizePaymentStateChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/AuthorizePaymentStateChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          AuthorizePaymentStateChangeEvent: '#/components/schemas/AuthorizePaymentStateChangeEvent'
    AuthorizePaymentStateChangeEventPayload:
      type: object
      description: AuthorizePaymentStateChangeEventPayload generic structure
      properties:
        authorizePayment:
          $ref: '#/components/schemas/AuthorizePayment'
    AuthorizePayment_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Task resource for operation authorize payment
          properties:
            authorizedPayment:
              $ref: '#/components/schemas/PaymentRefOrValue_FVO'
          required:
            - authorizedPayment
      discriminator:
        propertyName: '@type'
        mapping:
          AuthorizePayment: '#/components/schemas/AuthorizePayment_FVO'
    AuthorizePayment_RES:
      type: object
      description: Response object for AuthorizePayment
      allOf:
        - $ref: '#/components/schemas/AuthorizePayment'
      required:
        - id
        - href
      discriminator:
        propertyName: '@type'
        mapping:
          AuthorizePayment: '#/components/schemas/AuthorizePayment'
    BaseEvent:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Base event with common attributes.
          properties:
            event:
              type: object
              description: The event linked to the involved resource object
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanatory of the event.
            priority:
              type: string
              description: A priority.
            timeOcurred:
              type: string
              format: date-time
              description: The time the event occurred.
      discriminator:
        propertyName: '@type'
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent'
    BusinessPartner:
      type: object
      description: 'When business partner is the BusinessPartner '
      allOf:
        - $ref: '#/components/schemas/PartyRole'
    BusinessPartner_FVO:
      type: object
      description: 'When business partner is the BusinessPartner '
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
    CancelAuthorizedPayment:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Task resource for requesting an initiated payment cancellation
          properties:
            id:
              description: The identifier of the task
              type: string
            href:
              description: A reference to the task
              type: string
            state:
              description: Current state of the operation task
              type: string
              enum:
                - acknowledged
                - terminatedWithError
                - inProgress
                - done
                - cancel
                - canceled
            cancellationReason:
              description: A reason for asking an initiated payment cancellation
              type: string
            cancelAuthorizedPaymentDate:
              description: date of the operation initiate payment
              type: string
              format: date-time
            cancelledAuthorizedPaymentDate:
              description: date when the payment was cancelled
              type: string
              format: date-time
            authorizedPayment:
              $ref: '#/components/schemas/AuthorizePaymentRef'
      discriminator:
        propertyName: '@type'
        mapping:
          CancelAuthorizedPayment: '#/components/schemas/CancelAuthorizedPayment'
    CancelAuthorizedPaymentAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: CancelAuthorizedPaymentAttributeValueChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/CancelAuthorizedPaymentAttributeValueChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          CancelAuthorizedPaymentAttributeValueChangeEvent: '#/components/schemas/CancelAuthorizedPaymentAttributeValueChangeEvent'
    CancelAuthorizedPaymentAttributeValueChangeEventPayload:
      type: object
      description: CancelAuthorizedPaymentAttributeValueChangeEventPayload generic structure
      properties:
        cancelAuthorizedPayment:
          $ref: '#/components/schemas/CancelAuthorizedPayment'
    CancelAuthorizedPaymentCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: CancelAuthorizedPaymentCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/CancelAuthorizedPaymentCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          CancelAuthorizedPaymentCreateEvent: '#/components/schemas/CancelAuthorizedPaymentCreateEvent'
    CancelAuthorizedPaymentCreateEventPayload:
      type: object
      description: CancelAuthorizedPaymentCreateEventPayload generic structure
      properties:
        cancelAuthorizedPayment:
          $ref: '#/components/schemas/CancelAuthorizedPayment'
    CancelAuthorizedPaymentDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: CancelAuthorizedPaymentDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/CancelAuthorizedPaymentDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          CancelAuthorizedPaymentDeleteEvent: '#/components/schemas/CancelAuthorizedPaymentDeleteEvent'
    CancelAuthorizedPaymentDeleteEventPayload:
      type: object
      description: CancelAuthorizedPaymentDeleteEventPayload generic structure
      properties:
        cancelAuthorizedPayment:
          $ref: '#/components/schemas/CancelAuthorizedPayment'
    CancelAuthorizedPaymentStateChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: CancelAuthorizedPaymentStateChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/CancelAuthorizedPaymentStateChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          CancelAuthorizedPaymentStateChangeEvent: '#/components/schemas/CancelAuthorizedPaymentStateChangeEvent'
    CancelAuthorizedPaymentStateChangeEventPayload:
      type: object
      description: CancelAuthorizedPaymentStateChangeEventPayload generic structure
      properties:
        cancelAuthorizedPayment:
          $ref: '#/components/schemas/CancelAuthorizedPayment'
    CancelAuthorizedPayment_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Task resource for requesting an initiated payment cancellation
          properties:
            cancellationReason:
              description: A reason for asking an initiated payment cancellation
              type: string
            authorizedPayment:
              $ref: '#/components/schemas/AuthorizePaymentRef_FVO'
          required:
            - authorizedPayment
      discriminator:
        propertyName: '@type'
        mapping:
          CancelAuthorizedPayment: '#/components/schemas/CancelAuthorizedPayment_FVO'
    CancelAuthorizedPayment_RES:
      type: object
      description: Response object for CancelAuthorizedPayment
      allOf:
        - $ref: '#/components/schemas/CancelAuthorizedPayment'
      required:
        - id
        - href
      discriminator:
        propertyName: '@type'
        mapping:
          CancelAuthorizedPayment: '#/components/schemas/CancelAuthorizedPayment'
    ChannelRef:
      type: object
      description: >-
        The channel to which the resource reference to. e.g. channel for selling product offerings,
        channel for opening a trouble ticket etc..
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ChannelRef: '#/components/schemas/ChannelRef'
    ChannelRef_FVO:
      type: object
      description: >-
        The channel to which the resource reference to. e.g. channel for selling product offerings,
        channel for opening a trouble ticket etc..
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ChannelRef: '#/components/schemas/ChannelRef_FVO'
    Characteristic:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Describes a given characteristic of an object or entity through a name/value pair. This
            is an abstract base class, the actual value is in one of the strongly-typed subclasses :
            StringCharacteristic, ObjectCharacteristic, FloatCharacteristic, BooleanCharacteristic,
            NumberCharacteristic, IntegerCharacteristic, StringArrayCharacteristic,
            ObjectArrayCharacteristic, BooleanArrayCharacteristic, NumberArrayCharacteristic,
            IntegerArrayCharacteristic...
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              description: Collection of characteristic relationships
              items:
                $ref: '#/components/schemas/CharacteristicRelationship'
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic'
    CharacteristicRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship'
    CharacteristicRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_FVO'
    Characteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Describes a given characteristic of an object or entity through a name/value pair. This
            is an abstract base class, the actual value is in one of the strongly-typed subclasses :
            StringCharacteristic, ObjectCharacteristic, FloatCharacteristic, BooleanCharacteristic,
            NumberCharacteristic, IntegerCharacteristic, StringArrayCharacteristic,
            ObjectArrayCharacteristic, BooleanArrayCharacteristic, NumberArrayCharacteristic,
            IntegerArrayCharacteristic...
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              description: Collection of characteristic relationships
              items:
                $ref: '#/components/schemas/CharacteristicRelationship_FVO'
          required:
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic_FVO'
    Consumer:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole'
    Consumer_FVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
    ContactMedium:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Indicates the contact medium that could be used to contact the party. This is an
            abstract base class, the actual value is in one of the strongly-typed subclasses :
            EmailContactMedium, FaxContactMedium, PhoneContactMedium,
            GeographicAddressContactMedium, SocialMediaContactMedium...
          properties:
            id:
              type: string
              description: Identifier for this contact medium.
            preferred:
              type: boolean
              description: 'If true, indicates that is the preferred contact medium'
            contactType:
              type: string
              description: >-
                Type of the contact medium to qualify it like pro email / personal email. This is
                not used to define the contact medium used.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          ContactMedium: '#/components/schemas/ContactMedium'
    ContactMedium_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Indicates the contact medium that could be used to contact the party. This is an
            abstract base class, the actual value is in one of the strongly-typed subclasses :
            EmailContactMedium, FaxContactMedium, PhoneContactMedium,
            GeographicAddressContactMedium, SocialMediaContactMedium...
          properties:
            id:
              type: string
              description: Identifier for this contact medium.
            preferred:
              type: boolean
              description: 'If true, indicates that is the preferred contact medium'
            contactType:
              type: string
              description: >-
                Type of the contact medium to qualify it like pro email / personal email. This is
                not used to define the contact medium used.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          ContactMedium: '#/components/schemas/ContactMedium_FVO'
    CreditProfile:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Credit profile for the party (containing credit scoring, ...). By default only the
            current credit profile  is retrieved. It can be used as a list to give the party credit
            profiles history, the first one in the list will be the current one.
          properties:
            creditProfileDate:
              type: string
              format: date-time
              description: The date the profile was established
            creditRiskRating:
              type: integer
              description: This is an integer whose value is used to rate the risk
            creditScore:
              type: integer
              description: >-
                A measure of a person or organizations creditworthiness calculated on the basis of a
                combination of factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          CreditProfile: '#/components/schemas/CreditProfile'
    CreditProfile_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Credit profile for the party (containing credit scoring, ...). By default only the
            current credit profile  is retrieved. It can be used as a list to give the party credit
            profiles history, the first one in the list will be the current one.
          properties:
            creditProfileDate:
              type: string
              format: date-time
              description: The date the profile was established
            creditRiskRating:
              type: integer
              description: This is an integer whose value is used to rate the risk
            creditScore:
              type: integer
              description: >-
                A measure of a person or organizations creditworthiness calculated on the basis of a
                combination of factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          CreditProfile: '#/components/schemas/CreditProfile_FVO'
    Disability:
      type: object
      description: Lack or inadequate strength or ability.
      properties:
        disabilityCode:
          type: string
          description: Code of the disability
        disabilityName:
          type: string
          description: Name of the disability
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    Entity:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
    EntityRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
        - type: object
          description: Entity reference schema to be use for all entityRef class.
          properties:
            id:
              type: string
              description: The identifier of the referred entity.
            href:
              type: string
              description: The URI of the referred entity.
            name:
              type: string
              description: Name of the referred entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
          required:
            - id
    Event:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: event with common attributes.
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanation of the event.
            priority:
              type: string
              description: A priority.
            timeOccurred:
              type: string
              format: date-time
              description: The time the event occurred.
            source:
              $ref: '#/components/schemas/EntityRef'
            reportingSystem:
              $ref: '#/components/schemas/EntityRef'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            analyticCharacteristic:
              type: array
              description: Collection of analytic characteristics
              items:
                $ref: '#/components/schemas/Characteristic'
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            event:
              description: The event linked to the involved resource object
              type: object
    Extensible:
      type: object
      description: >-
        Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means
        that the Entity described by the schema  MUST be extended with the @type
      properties:
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
      required:
        - '@type'
    ExternalIdentifier:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier'
    ExternalIdentifier_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
          required:
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_FVO'
    Individual:
      allOf:
        - $ref: '#/components/schemas/Party'
        - type: object
          description: >-
            Individual represents a single human being (a man, woman or child). The individual can
            be a customer, an employee or any other person that the organization needs to store
            information about.
          properties:
            gender:
              type: string
              description: Gender
            placeOfBirth:
              type: string
              description: Reference to the place where the individual was born
            countryOfBirth:
              type: string
              description: Country where the individual was born
            nationality:
              type: string
              description: Nationality
            maritalStatus:
              type: string
              description: 'Marital status (married, divorced, widow ...)'
            birthDate:
              type: string
              format: date-time
              description: Birth date
            deathDate:
              type: string
              format: date-time
              description: Date of death
            title:
              type: string
              description: 'Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ...'
            aristocraticTitle:
              type: string
              description: 'e.g. Baron, Graf, Earl'
            generation:
              type: string
              description: 'e.g.. Sr, Jr, III (the third)'
            preferredGivenName:
              type: string
              description: >-
                Contains the chosen name by which the individual prefers to be addressed. Note: This
                name may be a name other than a given name, such as a nickname
            familyNamePrefix:
              type: string
              description: Family name prefix
            legalName:
              type: string
              description: Legal name or birth name (name one has for official purposes)
            middleName:
              type: string
              description: Middles name or initial
            name:
              type: string
              description: >-
                Full name flatten (first, middle, and last names) - this is the name that is
                expected to be presented in reference data types such as PartyRef, RelatedParty,
                etc. that refer to Individual
            formattedName:
              type: string
              description: >-
                A fully formatted name in one string with all of its pieces in their proper place
                and all of the necessary punctuation. Useful for specific contexts (Chinese,
                Japanese, Korean)
            location:
              type: string
              description: >-
                Temporary current location of the individual (may be used if the individual has
                approved its sharing)
            status:
              $ref: '#/components/schemas/IndividualStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameIndividual'
              description: List of other names by which this individual is known
            individualIdentification:
              type: array
              items:
                $ref: '#/components/schemas/IndividualIdentification'
              description: >-
                List of official identifications issued to the individual, such as passport, driving
                licence, social security number
            disability:
              type: array
              items:
                $ref: '#/components/schemas/Disability'
              description: List of disabilities suffered by the individual
            languageAbility:
              type: array
              items:
                $ref: '#/components/schemas/LanguageAbility'
              description: List of national languages known by the individual
            skill:
              type: array
              items:
                $ref: '#/components/schemas/Skill'
              description: List of skills exhibited by the individual
            familyName:
              type: string
              description: >-
                Contains the non-chosen or inherited name. Also known as last name in the Western
                context
            givenName:
              type: string
              description: First name of the individual
    IndividualIdentification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Represents our registration of information used as proof of identity by an individual
            (passport, national identity card, drivers license, social security number, birth
            certificate)
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: 'Authority which has issued the identifier, such as: social security, town hall'
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Identification type (passport, national identity card, drivers license, social
                security number, birth certificate)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          IndividualIdentification: '#/components/schemas/IndividualIdentification'
    IndividualIdentification_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Represents our registration of information used as proof of identity by an individual
            (passport, national identity card, drivers license, social security number, birth
            certificate)
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: 'Authority which has issued the identifier, such as: social security, town hall'
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Identification type (passport, national identity card, drivers license, social
                security number, birth certificate)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          IndividualIdentification: '#/components/schemas/IndividualIdentification_FVO'
    IndividualStateType:
      enum:
        - initialized
        - validated
        - deceased
      type: string
      description: Valid values for the lifecycle state of the individual
    Individual_FVO:
      allOf:
        - $ref: '#/components/schemas/Party_FVO'
        - type: object
          description: >-
            Individual represents a single human being (a man, woman or child). The individual can
            be a customer, an employee or any other person that the organization needs to store
            information about.
          properties:
            gender:
              type: string
              description: Gender
            placeOfBirth:
              type: string
              description: Reference to the place where the individual was born
            countryOfBirth:
              type: string
              description: Country where the individual was born
            nationality:
              type: string
              description: Nationality
            maritalStatus:
              type: string
              description: 'Marital status (married, divorced, widow ...)'
            birthDate:
              type: string
              format: date-time
              description: Birth date
            deathDate:
              type: string
              format: date-time
              description: Date of death
            title:
              type: string
              description: 'Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ...'
            aristocraticTitle:
              type: string
              description: 'e.g. Baron, Graf, Earl'
            generation:
              type: string
              description: 'e.g.. Sr, Jr, III (the third)'
            preferredGivenName:
              type: string
              description: >-
                Contains the chosen name by which the individual prefers to be addressed. Note: This
                name may be a name other than a given name, such as a nickname
            familyNamePrefix:
              type: string
              description: Family name prefix
            legalName:
              type: string
              description: Legal name or birth name (name one has for official purposes)
            middleName:
              type: string
              description: Middles name or initial
            name:
              type: string
              description: >-
                Full name flatten (first, middle, and last names) - this is the name that is
                expected to be presented in reference data types such as PartyRef, RelatedParty,
                etc. that refer to Individual
            formattedName:
              type: string
              description: >-
                A fully formatted name in one string with all of its pieces in their proper place
                and all of the necessary punctuation. Useful for specific contexts (Chinese,
                Japanese, Korean)
            location:
              type: string
              description: >-
                Temporary current location of the individual (may be used if the individual has
                approved its sharing)
            status:
              $ref: '#/components/schemas/IndividualStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameIndividual'
              description: List of other names by which this individual is known
            individualIdentification:
              type: array
              items:
                $ref: '#/components/schemas/IndividualIdentification_FVO'
              description: >-
                List of official identifications issued to the individual, such as passport, driving
                licence, social security number
            disability:
              type: array
              items:
                $ref: '#/components/schemas/Disability'
              description: List of disabilities suffered by the individual
            languageAbility:
              type: array
              items:
                $ref: '#/components/schemas/LanguageAbility'
              description: List of national languages known by the individual
            skill:
              type: array
              items:
                $ref: '#/components/schemas/Skill'
              description: List of skills exhibited by the individual
            familyName:
              type: string
              description: >-
                Contains the non-chosen or inherited name. Also known as last name in the Western
                context
            givenName:
              type: string
              description: First name of the individual
    InitiatePayment:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Task resource for operation initiate payment
          properties:
            id:
              description: The identifier of the task
              type: string
            href:
              description: A reference to the task
              type: string
            state:
              description: Current state of the operation task
              type: string
              enum:
                - acknowledged
                - terminatedWithError
                - inProgress
                - done
                - cancel
                - canceled
            initiatePaymentDate:
              description: date of the operation initiate payment
              type: string
              format: date-time
            initiatedPaymentDate:
              description: date when the operation was initiated
              type: string
              format: date-time
            authorizedPayment:
              $ref: '#/components/schemas/AuthorizePaymentRefOrValue'
            initiatedPayment:
              $ref: '#/components/schemas/PaymentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          InitiatePayment: '#/components/schemas/InitiatePayment'
    InitiatePaymentAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: InitiatePaymentAttributeValueChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/InitiatePaymentAttributeValueChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          InitiatePaymentAttributeValueChangeEvent: '#/components/schemas/InitiatePaymentAttributeValueChangeEvent'
    InitiatePaymentAttributeValueChangeEventPayload:
      type: object
      description: InitiatePaymentAttributeValueChangeEventPayload generic structure
      properties:
        initiatePayment:
          $ref: '#/components/schemas/InitiatePayment'
    InitiatePaymentCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: InitiatePaymentCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/InitiatePaymentCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          InitiatePaymentCreateEvent: '#/components/schemas/InitiatePaymentCreateEvent'
    InitiatePaymentCreateEventPayload:
      type: object
      description: InitiatePaymentCreateEventPayload generic structure
      properties:
        initiatePayment:
          $ref: '#/components/schemas/InitiatePayment'
    InitiatePaymentDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: InitiatePaymentDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/InitiatePaymentDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          InitiatePaymentDeleteEvent: '#/components/schemas/InitiatePaymentDeleteEvent'
    InitiatePaymentDeleteEventPayload:
      type: object
      description: InitiatePaymentDeleteEventPayload generic structure
      properties:
        initiatePayment:
          $ref: '#/components/schemas/InitiatePayment'
    InitiatePaymentStateChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: InitiatePaymentStateChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/InitiatePaymentStateChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          InitiatePaymentStateChangeEvent: '#/components/schemas/InitiatePaymentStateChangeEvent'
    InitiatePaymentStateChangeEventPayload:
      type: object
      description: InitiatePaymentStateChangeEventPayload generic structure
      properties:
        initiatePayment:
          $ref: '#/components/schemas/InitiatePayment'
    InitiatePayment_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Task resource for operation initiate payment
          properties:
            authorizedPayment:
              $ref: '#/components/schemas/AuthorizePaymentRefOrValue_FVO'
            initiatedPayment:
              $ref: '#/components/schemas/PaymentRefOrValue_FVO'
          required:
            - authorizedPayment
      discriminator:
        propertyName: '@type'
        mapping:
          InitiatePayment: '#/components/schemas/InitiatePayment_FVO'
    InitiatePayment_RES:
      type: object
      description: Response object for InitiatePayment
      allOf:
        - $ref: '#/components/schemas/InitiatePayment'
      required:
        - id
        - href
      discriminator:
        propertyName: '@type'
        mapping:
          InitiatePayment: '#/components/schemas/InitiatePayment'
    LanguageAbility:
      type: object
      description: Ability of an individual to understand or converse in a language.
      properties:
        languageCode:
          type: string
          description: Language code (RFC 5646)
        languageName:
          type: string
          description: Language name
        isFavouriteLanguage:
          type: boolean
          description: >-
            A “true” value specifies whether the language is considered by the individual as his
            favourite one
        writingProficiency:
          type: string
          description: Writing proficiency evaluated for this language
        readingProficiency:
          type: string
          description: Reading proficiency evaluated for this language
        speakingProficiency:
          type: string
          description: Speaking proficiency evaluated for this language
        listeningProficiency:
          type: string
          description: Listening proficiency evaluated for this language
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    Money:
      type: object
      description: A base / value business entity used to represent money
      properties:
        unit:
          type: string
          description: Currency (ISO4217 norm uses 3 letters to define the currency)
        value:
          type: number
          format: float
          description: >-
            A signed floating point number, the meaning of the sign is according to the context of
            the API that uses this Data type
    Organization:
      allOf:
        - $ref: '#/components/schemas/Party'
        - type: object
          description: >-
            Organization represents a group of people identified by shared interests or purpose.
            Examples include business, department and enterprise. Because of the complex nature of
            many businesses, both organizations and organization units are represented by the same
            data.
          properties:
            isLegalEntity:
              type: boolean
              description: >-
                If value is true, the organization is a legal entity known by a national
                referential.
            isHeadOffice:
              type: boolean
              description: 'If value is true, the organization is the head office'
            organizationType:
              type: string
              description: 'Type of Organization (company, department...)'
            existsDuring:
              $ref: '#/components/schemas/TimePeriod'
            name:
              type: string
              description: Organization name (department name for example)
            nameType:
              type: string
              description: 'Type of the name : Co, Inc, Ltd, etc.'
            status:
              $ref: '#/components/schemas/OrganizationStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameOrganization'
              description: List of additional names by which the organization is known
            organizationIdentification:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationIdentification'
              description: >-
                List of official identifiers given to the organization, for example company number
                in the registry of companies
            organizationChildRelationship:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationChildRelationship'
              description: >-
                List of organizations that are contained within this organization. For example if
                this organization is the Legal Department, the child organizations might include
                Claims, Courts, Contracts
            organizationParentRelationship:
              $ref: '#/components/schemas/OrganizationParentRelationship'
            tradingName:
              type: string
              description: Name that the organization (unit) trades under
    OrganizationChildRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Child references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationChildRelationship: '#/components/schemas/OrganizationChildRelationship'
    OrganizationChildRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Child references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationChildRelationship: '#/components/schemas/OrganizationChildRelationship_FVO'
    OrganizationIdentification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Represents our registration of information used as proof of identity by an organization
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: Authority which has issued the identifier (chamber of commerce...)
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Type of identification information used to identify the company in a country or
                internationally
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationIdentification: '#/components/schemas/OrganizationIdentification'
    OrganizationIdentification_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Represents our registration of information used as proof of identity by an organization
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: Authority which has issued the identifier (chamber of commerce...)
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Type of identification information used to identify the company in a country or
                internationally
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationIdentification: '#/components/schemas/OrganizationIdentification_FVO'
    OrganizationParentRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Parent references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationParentRelationship: '#/components/schemas/OrganizationParentRelationship'
    OrganizationParentRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Parent references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationParentRelationship: '#/components/schemas/OrganizationParentRelationship_FVO'
    OrganizationRef:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationRef: '#/components/schemas/OrganizationRef'
    OrganizationRef_FVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationRef: '#/components/schemas/OrganizationRef_FVO'
    OrganizationStateType:
      enum:
        - initialized
        - validated
        - closed
      type: string
      description: Valid values for the lifecycle state of the organization
    Organization_FVO:
      allOf:
        - $ref: '#/components/schemas/Party_FVO'
        - type: object
          description: >-
            Organization represents a group of people identified by shared interests or purpose.
            Examples include business, department and enterprise. Because of the complex nature of
            many businesses, both organizations and organization units are represented by the same
            data.
          properties:
            isLegalEntity:
              type: boolean
              description: >-
                If value is true, the organization is a legal entity known by a national
                referential.
            isHeadOffice:
              type: boolean
              description: 'If value is true, the organization is the head office'
            organizationType:
              type: string
              description: 'Type of Organization (company, department...)'
            existsDuring:
              $ref: '#/components/schemas/TimePeriod'
            name:
              type: string
              description: Organization name (department name for example)
            nameType:
              type: string
              description: 'Type of the name : Co, Inc, Ltd, etc.'
            status:
              $ref: '#/components/schemas/OrganizationStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameOrganization_FVO'
              description: List of additional names by which the organization is known
            organizationIdentification:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationIdentification_FVO'
              description: >-
                List of official identifiers given to the organization, for example company number
                in the registry of companies
            organizationChildRelationship:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationChildRelationship_FVO'
              description: >-
                List of organizations that are contained within this organization. For example if
                this organization is the Legal Department, the child organizations might include
                Claims, Courts, Contracts
            organizationParentRelationship:
              $ref: '#/components/schemas/OrganizationParentRelationship_FVO'
            tradingName:
              type: string
              description: Name that the organization (unit) trades under
    OtherNameIndividual:
      type: object
      description: >-
        Keeps track of other names, for example the old name of a woman before marriage or an artist
        name.
      properties:
        title:
          type: string
          description: 'Use for titles (aristrocatic, social, ...): Pr, Dr, Sir,....'
        aristocraticTitle:
          type: string
          description: 'e.g. Baron, Graf, Earl, etc.'
        generation:
          type: string
          description: 'e.g. Sr, Jr, etc.'
        givenName:
          type: string
          description: First name
        preferredGivenName:
          type: string
          description: >-
            Contains the chosen name by which the person prefers to be addressed. Note: This name
            may be a name other than a given name, such as a nickname
        familyNamePrefix:
          type: string
          description: Family name prefix
        familyName:
          type: string
          description: >-
            Contains the non-chosen or inherited name. Also known as last name in the Western
            context
        legalName:
          type: string
          description: Legal name or birth name (name one has for official purposes)
        middleName:
          type: string
          description: Middle name or initial
        fullName:
          type: string
          description: 'Full name flatten (first, middle, and last names)'
        formattedName:
          type: string
          description: >-
            . A fully formatted name in one string with all of its pieces in their proper place and
            all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese,
            Korean, etc.)
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    OtherNameOrganization:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'Keeps track of other names, for example the old name of an organization.'
          properties:
            tradingName:
              type: string
              description: The name that the organization trades under
            nameType:
              type: string
              description: 'Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh'
            name:
              type: string
              description: Organization name (department name for example)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          OtherNameOrganization: '#/components/schemas/OtherNameOrganization'
    OtherNameOrganization_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'Keeps track of other names, for example the old name of an organization.'
          properties:
            tradingName:
              type: string
              description: The name that the organization trades under
            nameType:
              type: string
              description: 'Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh'
            name:
              type: string
              description: Organization name (department name for example)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          OtherNameOrganization: '#/components/schemas/OtherNameOrganization_FVO'
    Party:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Generic and Abstract Party structure used to define commonalities between sub concepts
            of Individual and Organization.
          properties:
            externalReference:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
              description: >-
                List of identifiers of the Party in an external system, for example when party
                information is imported from a commerce system
            partyCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
              description: List of additional characteristics that a Party can take on.
            taxExemptionCertificate:
              type: array
              items:
                $ref: '#/components/schemas/TaxExemptionCertificate'
              description: >-
                List of tax exemptions granted to the party. For example, a war veteran might have
                partial exemption from state tax and a full exemption from federal tax
            creditRating:
              type: array
              items:
                $ref: '#/components/schemas/PartyCreditProfile'
              description: >-
                List of credit profiles and scores for the party, typically received from an
                external credit broker
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole'
              description: List of parties and/or party roles related to this party
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium'
              description: 'List of means for contacting the party, e.g. mobile phone, email address'
      discriminator:
        propertyName: '@type'
        mapping:
          Individual: '#/components/schemas/Individual'
          Organization: '#/components/schemas/Organization'
          Party: '#/components/schemas/Party'
    PartyCreditProfile:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            An individual might be evaluated for its worthiness and this evaluation might be based
            on a credit rating given by a credit agency.
          properties:
            creditAgencyName:
              type: string
              description: Name of the credit agency giving the score
            creditAgencyType:
              type: string
              description: Type of the credit agency giving the score
            ratingReference:
              type: string
              description: Reference corresponding to the credit rating
            ratingScore:
              type: integer
              format: int32
              description: >-
                A measure of a party's creditworthiness calculated on the basis of a combination of
                factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyCreditProfile: '#/components/schemas/PartyCreditProfile'
    PartyCreditProfile_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            An individual might be evaluated for its worthiness and this evaluation might be based
            on a credit rating given by a credit agency.
          properties:
            creditAgencyName:
              type: string
              description: Name of the credit agency giving the score
            creditAgencyType:
              type: string
              description: Type of the credit agency giving the score
            ratingReference:
              type: string
              description: Reference corresponding to the credit rating
            ratingScore:
              type: integer
              format: int32
              description: >-
                A measure of a party's creditworthiness calculated on the basis of a combination of
                factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyCreditProfile: '#/components/schemas/PartyCreditProfile_FVO'
    PartyOrPartyRole:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef'
        - $ref: '#/components/schemas/PartyRoleRef'
        - $ref: '#/components/schemas/Individual'
        - $ref: '#/components/schemas/Organization'
        - $ref: '#/components/schemas/PartyRole'
        - $ref: '#/components/schemas/Supplier'
        - $ref: '#/components/schemas/BusinessPartner'
        - $ref: '#/components/schemas/Consumer'
        - $ref: '#/components/schemas/Producer'
      discriminator:
        propertyName: '@type'
        mapping:
          BusinessPartner: '#/components/schemas/BusinessPartner'
          Consumer: '#/components/schemas/Consumer'
          Individual: '#/components/schemas/Individual'
          Organization: '#/components/schemas/Organization'
          PartyRef: '#/components/schemas/PartyRef'
          PartyRole: '#/components/schemas/PartyRole'
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
          Producer: '#/components/schemas/Producer'
          Supplier: '#/components/schemas/Supplier'
    PartyOrPartyRole_FVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef_FVO'
        - $ref: '#/components/schemas/PartyRoleRef_FVO'
        - $ref: '#/components/schemas/Individual_FVO'
        - $ref: '#/components/schemas/Organization_FVO'
        - $ref: '#/components/schemas/PartyRole_FVO'
        - $ref: '#/components/schemas/Supplier_FVO'
        - $ref: '#/components/schemas/BusinessPartner_FVO'
        - $ref: '#/components/schemas/Consumer_FVO'
        - $ref: '#/components/schemas/Producer_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          BusinessPartner: '#/components/schemas/BusinessPartner_FVO'
          Consumer: '#/components/schemas/Consumer_FVO'
          Individual: '#/components/schemas/Individual_FVO'
          Organization: '#/components/schemas/Organization_FVO'
          PartyRef: '#/components/schemas/PartyRef_FVO'
          PartyRole: '#/components/schemas/PartyRole_FVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_FVO'
          Producer: '#/components/schemas/Producer_FVO'
          Supplier: '#/components/schemas/Supplier_FVO'
    PartyRef:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
    PartyRefOrPartyRoleRef:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef'
        - $ref: '#/components/schemas/PartyRoleRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
    PartyRef_FVO:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_FVO'
    PartyRole:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: The part played by a party in a given context.
          properties:
            name:
              type: string
              description: >-
                A word, term, or phrase by which the PartyRole is known and distinguished from other
                PartyRoles. It's the name of the PartyRole unique entity.
            description:
              type: string
              description: A description of the PartyRole.
            role:
              type: string
              description: >-
                Role played by the engagedParty in this context. As role is defined by
                partyRoleSpecification, this role attribute can be used to precise the role defined
                by partyRoleSpecification, or it can be used to define the role in case there is no
                partyRoleSpecification.
            engagedParty:
              $ref: '#/components/schemas/PartyRef'
            partyRoleSpecification:
              $ref: '#/components/schemas/PartyRoleSpecificationRef'
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
              description: Describes the characteristic of a party role.
            account:
              type: array
              description: Collection of accounts
              items:
                $ref: '#/components/schemas/AccountRef'
            agreement:
              type: array
              description: Collection of agreements
              items:
                $ref: '#/components/schemas/AgreementRef'
            contactMedium:
              type: array
              description: Collection of contact mediums
              items:
                $ref: '#/components/schemas/ContactMedium'
            paymentMethod:
              type: array
              description: Collection of payment methods
              items:
                $ref: '#/components/schemas/PaymentMethodRef'
            creditProfile:
              type: array
              description: Collection of credit profiles
              items:
                $ref: '#/components/schemas/CreditProfile'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole'
            status:
              type: string
              description: Used to track the lifecycle status of the party role.
            statusReason:
              type: string
              description: >-
                A string providing an explanation on the value of the status lifecycle. For instance
                if the status is Rejected, statusReason will provide the reason for rejection.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          BusinessPartner: '#/components/schemas/BusinessPartner'
          Consumer: '#/components/schemas/Consumer'
          PartyRole: '#/components/schemas/PartyRole'
          Producer: '#/components/schemas/Producer'
          Supplier: '#/components/schemas/Supplier'
    PartyRoleRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
    PartyRoleRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef_FVO'
    PartyRoleSpecificationRef:
      type: object
      description: >-
        Party role specification reference. A party role specification gives additional details on
        the part played by a party in a given context.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleSpecificationRef: '#/components/schemas/PartyRoleSpecificationRef'
    PartyRoleSpecificationRef_FVO:
      type: object
      description: >-
        Party role specification reference. A party role specification gives additional details on
        the part played by a party in a given context.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleSpecificationRef: '#/components/schemas/PartyRoleSpecificationRef_FVO'
    PartyRole_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: The part played by a party in a given context.
          properties:
            name:
              type: string
              description: >-
                A word, term, or phrase by which the PartyRole is known and distinguished from other
                PartyRoles. It's the name of the PartyRole unique entity.
            description:
              type: string
              description: A description of the PartyRole.
            role:
              type: string
              description: >-
                Role played by the engagedParty in this context. As role is defined by
                partyRoleSpecification, this role attribute can be used to precise the role defined
                by partyRoleSpecification, or it can be used to define the role in case there is no
                partyRoleSpecification.
            engagedParty:
              $ref: '#/components/schemas/PartyRef_FVO'
            partyRoleSpecification:
              $ref: '#/components/schemas/PartyRoleSpecificationRef_FVO'
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
              description: Describes the characteristic of a party role.
            account:
              type: array
              description: Collection of accounts
              items:
                $ref: '#/components/schemas/AccountRef_FVO'
            agreement:
              type: array
              description: Collection of agreements
              items:
                $ref: '#/components/schemas/AgreementRef_FVO'
            contactMedium:
              type: array
              description: Collection of contact mediums
              items:
                $ref: '#/components/schemas/ContactMedium_FVO'
            paymentMethod:
              type: array
              description: Collection of payment methods
              items:
                $ref: '#/components/schemas/PaymentMethodRef_FVO'
            creditProfile:
              type: array
              description: Collection of credit profiles
              items:
                $ref: '#/components/schemas/CreditProfile_FVO'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
            status:
              type: string
              description: Used to track the lifecycle status of the party role.
            statusReason:
              type: string
              description: >-
                A string providing an explanation on the value of the status lifecycle. For instance
                if the status is Rejected, statusReason will provide the reason for rejection.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
          required:
            - name
            - engagedParty
      discriminator:
        propertyName: '@type'
        mapping:
          BusinessPartner: '#/components/schemas/BusinessPartner_FVO'
          Consumer: '#/components/schemas/Consumer_FVO'
          PartyRole: '#/components/schemas/PartyRole_FVO'
          Producer: '#/components/schemas/Producer_FVO'
          Supplier: '#/components/schemas/Supplier_FVO'
    Party_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Generic and Abstract Party structure used to define commonalities between sub concepts
            of Individual and Organization.
          properties:
            externalReference:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
              description: >-
                List of identifiers of the Party in an external system, for example when party
                information is imported from a commerce system
            partyCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
              description: List of additional characteristics that a Party can take on.
            taxExemptionCertificate:
              type: array
              items:
                $ref: '#/components/schemas/TaxExemptionCertificate_FVO'
              description: >-
                List of tax exemptions granted to the party. For example, a war veteran might have
                partial exemption from state tax and a full exemption from federal tax
            creditRating:
              type: array
              items:
                $ref: '#/components/schemas/PartyCreditProfile_FVO'
              description: >-
                List of credit profiles and scores for the party, typically received from an
                external credit broker
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
              description: List of parties and/or party roles related to this party
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium_FVO'
              description: 'List of means for contacting the party, e.g. mobile phone, email address'
      discriminator:
        propertyName: '@type'
        mapping:
          Individual: '#/components/schemas/Individual_FVO'
          Organization: '#/components/schemas/Organization_FVO'
          Party: '#/components/schemas/Party_FVO'
    Payment:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            The Payment resource represents a performed payment. It contains both information about
            the payment and the payment method used to perform it.
          properties:
            correlatorId:
              type: string
              description: Unique identifier in the client for the payment in case it is needed to correlate
            paymentDate:
              type: string
              format: date-time
              description: Date when the payment was performed
            name:
              type: string
              description: Screen name of the payment
            description:
              type: string
              description: Text describing the contents of the payment
            authorizationCode:
              type: string
              description: >-
                Authorization code retrieved from an external payment gateway that could be used for
                conciliation
            status:
              type: string
              description: Status of the payment
            statusDate:
              type: string
              format: date-time
              description: Date when the status was recorded
            amount:
              $ref: '#/components/schemas/Money'
            taxAmount:
              $ref: '#/components/schemas/Money'
            channel:
              $ref: '#/components/schemas/ChannelRef'
            paymentItem:
              type: array
              items:
                $ref: '#/components/schemas/PaymentItem'
            payer:
              $ref: '#/components/schemas/RelatedPartyOrPartyRole'
            totalAmount:
              $ref: '#/components/schemas/Money'
            paymentMethod:
              $ref: '#/components/schemas/PaymentMethodRefOrValue'
            account:
              $ref: '#/components/schemas/AccountRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Payment: '#/components/schemas/Payment'
    PaymentAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: PaymentAttributeValueChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/PaymentAttributeValueChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          PaymentAttributeValueChangeEvent: '#/components/schemas/PaymentAttributeValueChangeEvent'
    PaymentAttributeValueChangeEventPayload:
      type: object
      description: PaymentAttributeValueChangeEventPayload generic structure
      properties:
        payment:
          $ref: '#/components/schemas/Payment'
    PaymentCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: PaymentCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/PaymentCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          PaymentCreateEvent: '#/components/schemas/PaymentCreateEvent'
    PaymentCreateEventPayload:
      type: object
      description: PaymentCreateEventPayload generic structure
      properties:
        payment:
          $ref: '#/components/schemas/Payment'
    PaymentDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: PaymentDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/PaymentDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          PaymentDeleteEvent: '#/components/schemas/PaymentDeleteEvent'
    PaymentDeleteEventPayload:
      type: object
      description: PaymentDeleteEventPayload generic structure
      properties:
        payment:
          $ref: '#/components/schemas/Payment'
    PaymentItem:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            The paymentItem is the result of lettering process. It enables to assign automatically
            or manually part of incoming payment amount to a bill
          properties:
            id:
              type: string
              description: Unique identifier of the payment Item
            amount:
              $ref: '#/components/schemas/Money'
            taxAmount:
              $ref: '#/components/schemas/Money'
            totalAmount:
              $ref: '#/components/schemas/Money'
            item:
              $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PaymentItem: '#/components/schemas/PaymentItem'
    PaymentItem_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            The paymentItem is the result of lettering process. It enables to assign automatically
            or manually part of incoming payment amount to a bill
          properties:
            id:
              type: string
              description: Unique identifier of the payment Item
            amount:
              $ref: '#/components/schemas/Money'
            taxAmount:
              $ref: '#/components/schemas/Money'
            totalAmount:
              $ref: '#/components/schemas/Money'
            item:
              $ref: '#/components/schemas/EntityRef'
          required:
            - item
      discriminator:
        propertyName: '@type'
        mapping:
          PaymentItem: '#/components/schemas/PaymentItem_FVO'
    PaymentMethod:
      type: object
      description: Defines a specific method of payment (e.g. direct debit with all details associated)
      properties:
        description:
          type: string
          description: The contents of the payment method
        isPreferred:
          type: boolean
          description: >-
            If the method is the preferred one by the owner. Typically used when querying for the
            payment methods of a specific customer or account
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        relatedParty:
          $ref: '#/components/schemas/RelatedPartyOrPartyRole'
        account:
          type: array
          items:
            $ref: '#/components/schemas/AccountRef'
        name:
          type: string
          description: Friendly name assigned to the payment method
        status:
          type: string
        statusDate:
          type: string
          format: date-time
    PaymentMethodRef:
      type: object
      description: >-
        PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct
        debit).
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef'
    PaymentMethodRefOrValue:
      description: >-
        link to the resource that holds information about the payment mean used to complete the
        operation
      oneOf:
        - $ref: '#/components/schemas/PaymentMethodRef'
        - $ref: '#/components/schemas/PaymentMethod'
      discriminator:
        propertyName: '@type'
        mapping:
          PaymentMethod: '#/components/schemas/PaymentMethod'
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef'
    PaymentMethodRefOrValue_FVO:
      description: >-
        link to the resource that holds information about the payment mean used to complete the
        operation
      oneOf:
        - $ref: '#/components/schemas/PaymentMethodRef_FVO'
        - $ref: '#/components/schemas/PaymentMethod_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PaymentMethod: '#/components/schemas/PaymentMethod_FVO'
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef_FVO'
    PaymentMethodRef_FVO:
      type: object
      description: >-
        PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct
        debit).
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef_FVO'
    PaymentMethod_FVO:
      type: object
      description: Defines a specific method of payment (e.g. direct debit with all details associated)
      properties:
        description:
          type: string
          description: The contents of the payment method
        isPreferred:
          type: boolean
          description: >-
            If the method is the preferred one by the owner. Typically used when querying for the
            payment methods of a specific customer or account
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        relatedParty:
          $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
        account:
          type: array
          items:
            $ref: '#/components/schemas/AccountRef_FVO'
        name:
          type: string
          description: Friendly name assigned to the payment method
        status:
          type: string
        statusDate:
          type: string
          format: date-time
      required:
        - name
        - status
        - statusDate
    PaymentRef:
      type: object
      description: >-
        If an immediate payment has been done at the product order submission, the payment
        information are captured and stored (as a reference) in the order.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PaymentRef: '#/components/schemas/PaymentRef'
    PaymentRefOrValue:
      description: link to the resource information about the payment operation
      oneOf:
        - $ref: '#/components/schemas/PaymentRef'
        - $ref: '#/components/schemas/Payment'
      discriminator:
        propertyName: '@type'
        mapping:
          Payment: '#/components/schemas/Payment'
          PaymentRef: '#/components/schemas/PaymentRef'
    PaymentRefOrValue_FVO:
      description: link to the resource information about the payment operation
      oneOf:
        - $ref: '#/components/schemas/PaymentRef_FVO'
        - $ref: '#/components/schemas/Payment_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Payment: '#/components/schemas/Payment_FVO'
          PaymentRef: '#/components/schemas/PaymentRef_FVO'
    PaymentRef_FVO:
      type: object
      description: >-
        If an immediate payment has been done at the product order submission, the payment
        information are captured and stored (as a reference) in the order.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PaymentRef: '#/components/schemas/PaymentRef_FVO'
    PaymentStateChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: PaymentStateChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/PaymentStateChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          PaymentStateChangeEvent: '#/components/schemas/PaymentStateChangeEvent'
    PaymentStateChangeEventPayload:
      type: object
      description: PaymentStateChangeEventPayload generic structure
      properties:
        payment:
          $ref: '#/components/schemas/Payment'
    Payment_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            The Payment resource represents a performed payment. It contains both information about
            the payment and the payment method used to perform it.
          properties:
            correlatorId:
              type: string
              description: Unique identifier in the client for the payment in case it is needed to correlate
            name:
              type: string
              description: Screen name of the payment
            description:
              type: string
              description: Text describing the contents of the payment
            authorizationCode:
              type: string
              description: >-
                Authorization code retrieved from an external payment gateway that could be used for
                conciliation
            amount:
              $ref: '#/components/schemas/Money'
            taxAmount:
              $ref: '#/components/schemas/Money'
            channel:
              $ref: '#/components/schemas/ChannelRef_FVO'
            paymentItem:
              type: array
              items:
                $ref: '#/components/schemas/PaymentItem_FVO'
            payer:
              $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
            totalAmount:
              $ref: '#/components/schemas/Money'
            paymentMethod:
              $ref: '#/components/schemas/PaymentMethodRefOrValue_FVO'
            account:
              $ref: '#/components/schemas/AccountRef_FVO'
          required:
            - paymentMethod
            - totalAmount
      discriminator:
        propertyName: '@type'
        mapping:
          Payment: '#/components/schemas/Payment_FVO'
    Payment_RES:
      type: object
      description: Response object for Payment
      allOf:
        - $ref: '#/components/schemas/Payment'
      required:
        - id
        - href
      discriminator:
        propertyName: '@type'
        mapping:
          Payment: '#/components/schemas/Payment'
    Producer:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole'
    Producer_FVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
    Quantity:
      type: object
      description: An amount in a given unit
      properties:
        amount:
          type: number
          format: float
          default: 1
          description: Numeric value in a given unit
        units:
          type: string
          description: Unit
    Refund:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            The Refund resource represents a performed Refund. It contains both information about
            the refund and the payment method used to perform it.
          properties:
            correlatorId:
              type: string
              description: Unique identifier in the client for the refund in case it is needed to correlate
            refundDate:
              type: string
              format: date-time
              description: Date when the refund was performed
            name:
              type: string
              description: Screen name of the refund
            description:
              type: string
              description: Text describing the contents of the refund
            authorizationCode:
              type: string
              description: >-
                Authorization code retrieved from an external payment gateway that could be used for
                conciliation
            status:
              type: string
              description: Status of the refund
            statusDate:
              type: string
              format: date-time
              description: Date when the status was recorded
            amount:
              $ref: '#/components/schemas/Money'
            taxAmount:
              $ref: '#/components/schemas/Money'
            channel:
              $ref: '#/components/schemas/ChannelRef'
            payment:
              $ref: '#/components/schemas/PaymentRef'
            requestor:
              $ref: '#/components/schemas/RelatedPartyOrPartyRole'
            totalAmount:
              $ref: '#/components/schemas/Money'
            paymentMethod:
              $ref: '#/components/schemas/PaymentMethodRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          Refund: '#/components/schemas/Refund'
    RefundAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: RefundAttributeValueChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/RefundAttributeValueChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          RefundAttributeValueChangeEvent: '#/components/schemas/RefundAttributeValueChangeEvent'
    RefundAttributeValueChangeEventPayload:
      type: object
      description: RefundAttributeValueChangeEventPayload generic structure
      properties:
        refund:
          $ref: '#/components/schemas/Refund'
    RefundCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: RefundCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/RefundCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          RefundCreateEvent: '#/components/schemas/RefundCreateEvent'
    RefundCreateEventPayload:
      type: object
      description: RefundCreateEventPayload generic structure
      properties:
        refund:
          $ref: '#/components/schemas/Refund'
    RefundDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: RefundDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/RefundDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          RefundDeleteEvent: '#/components/schemas/RefundDeleteEvent'
    RefundDeleteEventPayload:
      type: object
      description: RefundDeleteEventPayload generic structure
      properties:
        refund:
          $ref: '#/components/schemas/Refund'
    RefundStateChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: RefundStateChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/RefundStateChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          RefundStateChangeEvent: '#/components/schemas/RefundStateChangeEvent'
    RefundStateChangeEventPayload:
      type: object
      description: RefundStateChangeEventPayload generic structure
      properties:
        refund:
          $ref: '#/components/schemas/Refund'
    Refund_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            The Refund resource represents a performed Refund. It contains both information about
            the refund and the payment method used to perform it.
          properties:
            correlatorId:
              type: string
              description: Unique identifier in the client for the refund in case it is needed to correlate
            name:
              type: string
              description: Screen name of the refund
            description:
              type: string
              description: Text describing the contents of the refund
            authorizationCode:
              type: string
              description: >-
                Authorization code retrieved from an external payment gateway that could be used for
                conciliation
            amount:
              $ref: '#/components/schemas/Money'
            taxAmount:
              $ref: '#/components/schemas/Money'
            channel:
              $ref: '#/components/schemas/ChannelRef_FVO'
            payment:
              $ref: '#/components/schemas/PaymentRef_FVO'
            requestor:
              $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
            totalAmount:
              $ref: '#/components/schemas/Money'
            paymentMethod:
              $ref: '#/components/schemas/PaymentMethodRefOrValue_FVO'
          required:
            - paymentMethod
            - account
            - totalAmount
      discriminator:
        propertyName: '@type'
        mapping:
          Refund: '#/components/schemas/Refund_FVO'
    Refund_RES:
      type: object
      description: Response object for Refund
      allOf:
        - $ref: '#/components/schemas/Refund'
      required:
        - id
        - href
      discriminator:
        propertyName: '@type'
        mapping:
          Refund: '#/components/schemas/Refund'
    RelatedPartyOrPartyRole:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyOrPartyRole'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyOrPartyRole: '#/components/schemas/RelatedPartyOrPartyRole'
    RelatedPartyOrPartyRole_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyOrPartyRole_FVO'
          required:
            - role
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyOrPartyRole: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
    RelatedPartyRefOrPartyRoleRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
    Skill:
      type: object
      description: >-
        Skills evaluated for an individual with a level and possibly with a limited validity when an
        obsolescence is defined (Ex: the first-aid certificate first level is limited to one year
        and an update training is required each year to keep the level).
      properties:
        skillCode:
          type: string
          description: Code of the skill
        skillName:
          type: string
          description: 'Name of the skill, such as Java language'
        evaluatedLevel:
          type: string
          description: Level of expertise in a skill evaluated for an individual
        comment:
          type: string
          description: A free text comment linked to the evaluation done
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    Supplier:
      type: object
      description: 'When business partner is the Supplier '
      allOf:
        - $ref: '#/components/schemas/PartyRole'
    Supplier_FVO:
      type: object
      description: 'When business partner is the Supplier '
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
    TaxDefinition:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Reference of a tax definition. A tax is levied by an authorized tax jurisdiction. For
            example, there are many different types of tax (Federal Tax levied by the US Government,
            State Tax levied by the State of California, City Tax levied by the City of Los Angeles,
            etc.).
          properties:
            id:
              type: string
              description: Unique identifier of the tax.
            name:
              type: string
              description: Tax name.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            jurisdictionName:
              type: string
              description: Name of the jurisdiction that levies the tax
              example: USA
            jurisdictionLevel:
              type: string
              description: Level of the jurisdiction that levies the tax
              example: Country
            taxType:
              type: string
              description: Type of the tax.
              example: VAT
      discriminator:
        propertyName: '@type'
        mapping:
          TaxDefinition: '#/components/schemas/TaxDefinition'
    TaxDefinition_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Reference of a tax definition. A tax is levied by an authorized tax jurisdiction. For
            example, there are many different types of tax (Federal Tax levied by the US Government,
            State Tax levied by the State of California, City Tax levied by the City of Los Angeles,
            etc.).
          properties:
            id:
              type: string
              description: Unique identifier of the tax.
            name:
              type: string
              description: Tax name.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            jurisdictionName:
              type: string
              description: Name of the jurisdiction that levies the tax
              example: USA
            jurisdictionLevel:
              type: string
              description: Level of the jurisdiction that levies the tax
              example: Country
            taxType:
              type: string
              description: Type of the tax.
              example: VAT
      discriminator:
        propertyName: '@type'
        mapping:
          TaxDefinition: '#/components/schemas/TaxDefinition_FVO'
    TaxExemptionCertificate:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A tax exemption certificate represents a tax exemption granted to a party (individual or
            organization) by a tax jurisdiction which may be a city, state, country,... An exemption
            has a certificate identifier (received from the jurisdiction that levied the tax) and a
            validity period. An exemption is per tax types and determines for each type of tax what
            portion of the tax is exempted (partial by percentage or complete) via the tax
            definition.
          properties:
            id:
              type: string
              description: Identifier of the tax exemption within list of the exemptions
            taxDefinition:
              type: array
              items:
                $ref: '#/components/schemas/TaxDefinition'
              description: >-
                A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The
                definition would include the exemption (e.g. for a rate exemption 0% would be a full
                exemption, 5% could be a partial exemption if the actual rate was 10%).
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            certificateNumber:
              type: string
              description: >-
                Identifier of a document that shows proof of exemption from taxes for the taxing
                jurisdiction
            issuingJurisdiction:
              type: string
              description: Name of the jurisdiction that issued the exemption
              example: USA
            reason:
              type: string
              description: Reason for the tax exemption
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          TaxExemptionCertificate: '#/components/schemas/TaxExemptionCertificate'
    TaxExemptionCertificate_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A tax exemption certificate represents a tax exemption granted to a party (individual or
            organization) by a tax jurisdiction which may be a city, state, country,... An exemption
            has a certificate identifier (received from the jurisdiction that levied the tax) and a
            validity period. An exemption is per tax types and determines for each type of tax what
            portion of the tax is exempted (partial by percentage or complete) via the tax
            definition.
          properties:
            id:
              type: string
              description: Identifier of the tax exemption within list of the exemptions
            taxDefinition:
              type: array
              items:
                $ref: '#/components/schemas/TaxDefinition_FVO'
              description: >-
                A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The
                definition would include the exemption (e.g. for a rate exemption 0% would be a full
                exemption, 5% could be a partial exemption if the actual rate was 10%).
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            certificateNumber:
              type: string
              description: >-
                Identifier of a document that shows proof of exemption from taxes for the taxing
                jurisdiction
            issuingJurisdiction:
              type: string
              description: Name of the jurisdiction that issued the exemption
              example: USA
            reason:
              type: string
              description: Reason for the tax exemption
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          TaxExemptionCertificate: '#/components/schemas/TaxExemptionCertificate_FVO'
    TimePeriod:
      type: object
      description: 'A period of time, either as a deadline (endDateTime only) a startDateTime only, or both'
      properties:
        startDateTime:
          description: 'Start of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
        endDateTime:
          description: 'End of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
    Error:
      discriminator:
        propertyName: '@type'
        mapping:
          Error: '#/components/schemas/Error'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          required:
            - code
            - reason
          properties:
            code:
              type: string
              description: 'Application relevant detail, defined in the API or a common list.'
            reason:
              type: string
              description: Explanation of the reason for the error which can be shown to a client user.
            message:
              type: string
              description: >-
                More details and corrective actions related to the error which can be shown to a
                client user.
            status:
              type: string
              description: HTTP Error code extension
            referenceError:
              type: string
              description: URI of documentation describing the error.
      description: 'Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)'
    Hub_FVO:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      required:
        - callback
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - properties:
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed
    Hub:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      allOf:
        - $ref: '#/components/schemas/Entity'
        - properties:
            id:
              type: string
              description: Id of the listener
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed
          required:
            - callback
  parameters:
    Id:
      name: id
      required: true
      schema:
        type: string
      in: path
      description: Identifier of the Resource
    Fields:
      name: fields
      in: query
      description: Comma-separated properties to be provided in response
      schema:
        type: string
    Offset:
      name: offset
      in: query
      description: Requested index for start of resources to be provided in response
      schema:
        type: integer
    Limit:
      name: limit
      in: query
      description: Requested number of resources to be provided in response
      schema:
        type: integer
    Before:
      name: before
      in: query
      description: An opaque string value representing the page results before the cursor value
      schema:
        type: string
    After:
      name: after
      in: query
      description: An opaque string value representing the page results after the cursor value
      schema:
        type: string
    Sort:
      name: sort
      in: query
      description: >-
        The default direction is Ascending order, the use of the modifier in front of the sort field
        name, “-“, changes the sort order direction.
      schema:
        type: string
    Filter:
      name: filter
      in: query
      description: Filter a collection using JSONPath
      schema:
        type: string
        example: 'attachment[?(@size==300)]'
  requestBodies:
    Payment_FVO:
      description: The Payment to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Payment_FVO'
          examples:
            Payment_Create_example:
              $ref: '#/components/examples/Payment_Create_example_request'
      required: true
    PaymentPaymentCreateEvent:
      description: Payment paymentCreate Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentCreateEvent'
          examples:
            paymentCreate:
              $ref: '#/components/examples/paymentCreate_request'
      required: true
    PaymentPaymentAttributeValueChangeEvent:
      description: Payment paymentAttributeValueChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentAttributeValueChangeEvent'
          examples:
            paymentAttributeValueChange:
              $ref: '#/components/examples/paymentAttributeValueChange_request'
      required: true
    PaymentPaymentStateChangeEvent:
      description: Payment paymentStateChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentStateChangeEvent'
          examples:
            paymentStateChange:
              $ref: '#/components/examples/paymentStateChange_request'
      required: true
    PaymentPaymentDeleteEvent:
      description: Payment paymentDelete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentDeleteEvent'
          examples:
            paymentDelete:
              $ref: '#/components/examples/paymentDelete_request'
      required: true
    AuthorizePayment_FVO:
      description: The AuthorizePayment to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorizePayment_FVO'
          examples:
            Authorize_Payment_Create_example:
              $ref: '#/components/examples/Authorize_Payment_Create_example_request'
      required: true
    AuthorizePaymentAuthorizePaymentCreateEvent:
      description: AuthorizePayment authorizePaymentCreate Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorizePaymentCreateEvent'
          examples:
            authorizePaymentCreate:
              $ref: '#/components/examples/authorizePaymentCreate_request'
      required: true
    AuthorizePaymentAuthorizePaymentAttributeValueChangeEvent:
      description: AuthorizePayment authorizePaymentAttributeValueChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorizePaymentAttributeValueChangeEvent'
          examples:
            authorizePaymentAttributeValueChange:
              $ref: '#/components/examples/authorizePaymentAttributeValueChange_request'
      required: true
    AuthorizePaymentAuthorizePaymentStateChangeEvent:
      description: AuthorizePayment authorizePaymentStateChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorizePaymentStateChangeEvent'
          examples:
            authorizePaymentStateChange:
              $ref: '#/components/examples/authorizePaymentStateChange_request'
      required: true
    AuthorizePaymentAuthorizePaymentDeleteEvent:
      description: AuthorizePayment authorizePaymentDelete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorizePaymentDeleteEvent'
          examples:
            authorizePaymentDelete:
              $ref: '#/components/examples/authorizePaymentDelete_request'
      required: true
    InitiatePayment_FVO:
      description: The InitiatePayment to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiatePayment_FVO'
          examples:
            Initiate_Payment_Create_example:
              $ref: '#/components/examples/Initiate_Payment_Create_example_request'
      required: true
    InitiatePaymentInitiatePaymentCreateEvent:
      description: InitiatePayment InitiatePaymentCreate Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiatePaymentCreateEvent'
          examples:
            InitiatePaymentCreate:
              $ref: '#/components/examples/InitiatePaymentCreate_request'
      required: true
    InitiatePaymentInitiatePaymentAttributeValueChangeEvent:
      description: InitiatePayment InitiatePaymentAttributeValueChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiatePaymentAttributeValueChangeEvent'
          examples:
            InitiatePaymentAttributeValueChange:
              $ref: '#/components/examples/InitiatePaymentAttributeValueChange_request'
      required: true
    InitiatePaymentInitiatePaymentStateChangeEvent:
      description: InitiatePayment InitiatePaymentStateChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiatePaymentStateChangeEvent'
          examples:
            InitiatePaymentStateChange:
              $ref: '#/components/examples/InitiatePaymentStateChange_request'
      required: true
    InitiatePaymentInitiatePaymentDeleteEvent:
      description: InitiatePayment InitiatePaymentDelete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiatePaymentDeleteEvent'
          examples:
            InitiatePaymentDelete:
              $ref: '#/components/examples/InitiatePaymentDelete_request'
      required: true
    CancelAuthorizedPayment_FVO:
      description: The CancelAuthorizedPayment to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CancelAuthorizedPayment_FVO'
          examples:
            Cancel_Authorized_Payment_Create_example:
              $ref: '#/components/examples/Cancel_Authorized_Payment_Create_example_request'
      required: true
    CancelAuthorizedPaymentCancelAuthorizedPaymentCreateEvent:
      description: CancelAuthorizedPayment CancelAuthorizedPaymentCreate Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CancelAuthorizedPaymentCreateEvent'
          examples:
            CancelAuthorizedPaymentCreate:
              $ref: '#/components/examples/CancelAuthorizedPaymentCreate_request'
      required: true
    CancelAuthorizedPaymentCancelAuthorizedPaymentAttributeValueChangeEvent:
      description: CancelAuthorizedPayment CancelAuthorizedPaymentAttributeValueChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CancelAuthorizedPaymentAttributeValueChangeEvent'
          examples:
            CancelAuthorizedPaymentAttributeValueChange:
              $ref: '#/components/examples/CancelAuthorizedPaymentAttributeValueChange_request'
      required: true
    CancelAuthorizedPaymentCancelAuthorizedPaymentStateChangeEvent:
      description: CancelAuthorizedPayment CancelAuthorizedPaymentStateChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CancelAuthorizedPaymentStateChangeEvent'
          examples:
            CancelAuthorizedPaymentStateChange:
              $ref: '#/components/examples/CancelAuthorizedPaymentStateChange_request'
      required: true
    CancelAuthorizedPaymentCancelAuthorizedPaymentDeleteEvent:
      description: CancelAuthorizedPayment CancelAuthorizedPaymentDelete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CancelAuthorizedPaymentDeleteEvent'
          examples:
            CancelAuthorizedPaymentDelete:
              $ref: '#/components/examples/CancelAuthorizedPaymentDelete_request'
      required: true
    Refund_FVO:
      description: The Refund to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Refund_FVO'
          examples:
            Refund_Create_example:
              $ref: '#/components/examples/Refund_Create_example_request'
      required: true
    RefundCreateEvent:
      description: Refund create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RefundCreateEvent'
          examples:
            Create:
              $ref: '#/components/examples/Create_request'
      required: true
    RefundAttributeValueChangeEvent:
      description: Refund attributeValueChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RefundAttributeValueChangeEvent'
          examples:
            AttributeValueChange:
              $ref: '#/components/examples/AttributeValueChange_request'
      required: true
    RefundStateChangeEvent:
      description: Refund stateChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RefundStateChangeEvent'
          examples:
            StateChange:
              $ref: '#/components/examples/StateChange_request'
      required: true
    RefundDeleteEvent:
      description: Refund delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RefundDeleteEvent'
          examples:
            Delete:
              $ref: '#/components/examples/Delete_request'
      required: true
    Hub_FVO:
      description: Data containing the callback endpoint to deliver the information
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub_FVO'
          examples:
            Basic Hub Example Request:
              value:
                '@type': Hub
                callback: 'https://host/tmf-api/specificAPIName/v5/listener/specificEventListener'
                query: data
      required: true
  responses:
    '200':
      description: OK
    '202':
      description: Accepted
    '204':
      description: Deleted
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Bad Request Error
              value:
                '@type': Error
                code: ERR400
                reason: Bad Request
                message: >-
                  The server could not understand the request due to invalid syntax. Please correct
                  the syntax and try again.
                referenceError: 'https://host/errors'
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Unauthorized Error
              value:
                '@type': Error
                code: ERR401
                reason: Unauthorized
                message: >-
                  You are not authorized to access the requested resource. Please provide the
                  correct credentials.
                referenceError: 'https://host/errors'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Forbidden Error
              value:
                '@type': Error
                code: ERR403
                reason: Forbidden
                message: >-
                  You don't have the permission to access the requested resource. It is either
                  read-protected or not readable by the server.
                referenceError: 'https://host/errors'
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Not Found Error
              value:
                '@type': Error
                code: ERR404
                reason: Not Found
                message: The requested URL was not found on the server.
                referenceError: 'https://host/errors'
    '405':
      description: Method Not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Method Not allowed Error
              value:
                '@type': Error
                code: ERR405
                reason: Method Not allowed
                message: The method is not allowed for the requested URL.
                referenceError: 'https://host/errors'
    '409':
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Conflict Error
              value:
                '@type': Error
                code: ERR409
                reason: Conflict
                message: >-
                  The request could not be completed due to a conflict with the current state of the
                  target resource.
                referenceError: 'https://host/errors'
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Internal Server Error example
              value:
                '@type': Error
                code: ERR500
                reason: Internal Server Error
                message: The server encountered an internal error. Please contact the system administrator.
                referenceError: 'https://host/errors'
    '501':
      description: Not Implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Not Implemented Error
              value:
                '@type': Error
                code: ERR501
                reason: The requested operation is not implemented
                message: >-
                  The requested operation is not implemented. Please contact the system
                  administrator.
                referenceError: 'https://host/errors'
    '503':
      description: Service Unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Service Unavailable Error
              value:
                '@type': Error
                code: ERR503
                reason: Service Unavailable
                message: The service is currently unavailable. Please try again later.
                referenceError: 'https://host/errors'
    200PaymentArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Payment_RES'
          examples:
            Payment_list_example_01:
              $ref: '#/components/examples/Payment_list_example_01_response'
            Payment_list_example_11:
              $ref: '#/components/examples/Payment_list_example_11_response'
            Payment_list_example_21:
              $ref: '#/components/examples/Payment_list_example_21_response'
    200Payment_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Payment_RES'
          examples:
            Payment_retrieve_example:
              $ref: '#/components/examples/Payment_retrieve_example_response'
    200Payment_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Payment_RES'
    201Payment:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Payment_RES'
          examples:
            Payment_Create_example:
              $ref: '#/components/examples/Payment_Create_example_response'
    200AuthorizePaymentArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AuthorizePayment_RES'
          examples:
            AuthorizePayment_request_list_example:
              $ref: '#/components/examples/AuthorizePayment_request_list_example_response'
    200AuthorizePayment_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorizePayment_RES'
          examples:
            AuthorizePayment_retrieve_example:
              $ref: '#/components/examples/AuthorizePayment_retrieve_example_response'
    200AuthorizePayment_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorizePayment_RES'
    201AuthorizePayment:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorizePayment_RES'
          examples:
            Authorize_Payment_Create_example:
              $ref: '#/components/examples/Authorize_Payment_Create_example_response'
    200InitiatePaymentArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/InitiatePayment_RES'
          examples:
            Initiate_Payment_request_list_example:
              $ref: '#/components/examples/Initiate_Payment_request_list_example_response'
    200InitiatePayment_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiatePayment_RES'
          examples:
            Initiate_Payment_retrieve_example:
              $ref: '#/components/examples/Initiate_Payment_retrieve_example_response'
    200InitiatePayment_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiatePayment_RES'
    201InitiatePayment:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiatePayment_RES'
          examples:
            Initiate_Payment_Create_example:
              $ref: '#/components/examples/Initiate_Payment_Create_example_response'
    200CancelAuthorizedPaymentArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/CancelAuthorizedPayment_RES'
          examples:
            Cancel_Authorized_Payment_request_list_example:
              $ref: '#/components/examples/Cancel_Authorized_Payment_request_list_example_response'
    200CancelAuthorizedPayment_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CancelAuthorizedPayment_RES'
          examples:
            Cancel_Authorized_payment_retrieve_example:
              $ref: '#/components/examples/Cancel_Authorized_payment_retrieve_example_response'
    200CancelAuthorizedPayment_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CancelAuthorizedPayment_RES'
    201CancelAuthorizedPayment:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CancelAuthorizedPayment_RES'
          examples:
            Cancel_Authorized_Payment_Create_example:
              $ref: '#/components/examples/Cancel_Authorized_Payment_Create_example_response'
    200RefundArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Refund_RES'
          examples:
            Refund_list_example:
              $ref: '#/components/examples/Refund_list_example_response'
    200Refund_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Refund_RES'
          examples:
            Refund_retrieve_example:
              $ref: '#/components/examples/Refund_retrieve_example_response'
    200Refund_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Refund_RES'
    201Refund:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Refund_RES'
          examples:
            Refund_Create_example:
              $ref: '#/components/examples/Refund_Create_example_response'
    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Error example
              value:
                '@type': Error
                code: ERR001
                reason: Missing information
                message: Please provide the additional example information
                referenceError: 'https://host/errors'
    Hub:
      description: Notified
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub'
          examples:
            basic:
              summary: Hub example
              value:
                '@type': Hub
                callback: 'https://host/tmf-api/specificAPIName/v5/listener/specificEventListener'
  headers:
    X-Total-Count:
      description: Total number of items matching criteria
      schema:
        type: integer
    X-Result-Count:
      description: Actual number of items returned in the response body
      schema:
        type: integer
  securitySchemes: {}
  examples:
    Payment_list_example_01_response:
      value:
        - id: '12345'
          href: 'https://host:port/paymentManagement/v5/payment/12345'
          correlatorId: '632147'
          paymentDate: '2020-01-08T12:06:38.230Z'
          name: 'Example #1'
          status: done
          statusDate: '2020-01-08T12:06:38.230Z'
          '@type': Payment
          amount:
            unit: EUR
            value: 10
          taxAmount:
            unit: EUR
            value: 1.6
          totalAmount:
            unit: EUR
            value: 11.6
          channel:
            id: channel1
            name: WEB Portal
            '@type': ChannelRef
          account:
            id: '44444'
            href: 'https://host:port/accountManagement/v5/account/44444'
            name: Telco fusion account
            description: Michel Valette's telco account
            '@type': AccountRef
            '@referredType': PartyAccount
          paymentItem:
            - id: '1'
              amount:
                unit: EUR
                value: 6
              taxAmount:
                unit: EUR
                value: 0.96
              totalAmount:
                unit: EUR
                value: 6.96
              item:
                id: '1234'
                href: 'https://host:port/customerBillManagement/v5/customerBill/1234'
                '@type': EntityRef
                '@referredType': CustomerBill
              '@type': PaymentItem
            - id: '2'
              amount:
                unit: EUR
                value: 4
              taxAmount:
                unit: EUR
                value: 0.64
              totalAmount:
                unit: EUR
                value: 4.64
              item:
                id: '666'
                href: 'https://host:port/productOrdering/v5/productOrder/666'
                '@type': EntityRef
                '@referredType': ProductOrder
              '@type': PaymentItem
          paymentMethod:
            id: 15492MIFB865654
            href: 'https://host:port/paymentMethodManagement/v5/paymentMethod/15492MIFB865654'
            '@referredType': Voucher
            '@type': PaymentMethodRef
          payer:
            '@type': RelatedPartyOrPartyRole
            role: payer
            partyOrPartyRole:
              href: 'https://host:port/tmf-api/partyManagement/v5/individual/2777'
              id: '2777'
              name: John Doe
              '@type': PartyRoleRef
              '@referredType': Individual
        - id: '369258'
          href: 'https://host:port/paymentManagement/v5/payment/369258'
          correlatorId: '632147'
          paymentDate: '2020-01-08T12:06:38.230Z'
          name: 'Example #2'
          status: done
          statusDate: '2020-01-08T12:06:38.230Z'
          '@type': Payment
          amount:
            unit: EUR
            value: 7.24
          taxAmount:
            unit: EUR
            value: 1.16
          totalAmount:
            unit: EUR
            value: 8.4
          channel:
            id: channel1
            name: WEB Portal
            '@type': ChannelRef
          account:
            id: '44444'
            href: 'https://host:port/accountManagement/v5/account/44444'
            name: Telco fusion account
            description: Michel Valette's telco account
            '@type': AccountRef
            '@referredType': PartyAccount
          paymentMethod:
            id: 15492MIFB865654
            href: 'https://host:port/paymentMethodManagement/v5/paymentMethod/15492MIFB865654'
            '@referredType': Voucher
            '@type': PaymentMethodRef
          payer:
            '@type': RelatedPartyOrPartyRole
            role: payer
            partyOrPartyRole:
              href: 'https://host:port/tmf-api/partyManagement/v5/individual/2777'
              id: '2777'
              name: John Doe
              '@type': PartyRoleRef
              '@referredType': Individual
        - id: '987321462'
          href: 'https://host:port/paymentManagement/v5/payment/987321462'
          paymentDate: '2020-01-15T17:42:06.120Z'
          name: 'Example #3'
          status: done
          statusDate: '2020-01-15T17:42:06.120Z'
          '@type': Payment
          amount:
            unit: EUR
            value: 27
          taxAmount:
            unit: EUR
            value: 4.32
          totalAmount:
            unit: EUR
            value: 31.32
          channel:
            id: channel1
            name: WEB Portal
            '@type': ChannelRef
          account:
            id: '849897498'
            href: 'https://host:port/accountManagement/v5/account/849897498'
            description: John Doe personnal account
            '@type': AccountRef
            '@referredType': PartyAccount
          paymentMethod:
            id: 15492MIFB865654
            href: 'https://host:port/paymentMethodManagement/v5/paymentMethod/15492MIFB865654'
            '@referredType': Voucher
            '@type': PaymentMethodRef
          payer:
            '@type': RelatedPartyOrPartyRole
            role: payer
            partyOrPartyRole:
              href: 'https://host:port/tmf-api/partyManagement/v5/individual/2777'
              id: '2777'
              name: John Doe
              '@type': PartyRoleRef
              '@referredType': Individual
      description: >-
        The example below includes the attributes within the Payment resource model that must be
        included in the query response.
    Payment_list_example_11_response:
      value:
        - id: '12345'
          href: 'https://host:port/paymentManagement/v5/payment/12345'
          correlatorId: '632147'
          paymentDate: '2020-01-08T12:06:38.230Z'
          name: 'Example #1'
          status: done
          statusDate: '2020-01-08T12:06:38.230Z'
          '@type': Payment
          amount:
            unit: EUR
            value: 10
          taxAmount:
            unit: EUR
            value: 1.6
          totalAmount:
            unit: EUR
            value: 11.6
          channel:
            id: channel1
            name: WEB Portal
            '@type': ChannelRef
          account:
            id: '44444'
            href: 'https://host:port/accountManagement/v5/account/44444'
            name: Telco fusion account
            description: Michel Valette's telco account
            '@type': AccountRef
            '@referredType': PartyAccount
          paymentItem:
            - id: '1'
              amount:
                unit: EUR
                value: 6
              taxAmount:
                unit: EUR
                value: 0.96
              totalAmount:
                unit: EUR
                value: 6.96
              item:
                id: '1234'
                href: 'https://host:port/customerBillManagement/v5/customerBill/1234'
                '@type': EntityRef
                '@referredType': CustomerBill
              '@type': PaymentItem
            - id: '2'
              amount:
                unit: EUR
                value: 4
              taxAmount:
                unit: EUR
                value: 0.64
              totalAmount:
                unit: EUR
                value: 4.64
              item:
                id: '666'
                href: 'https://host:port/productOrdering/v5/productOrder/666'
                '@type': EntityRef
                '@referredType': ProductOrder
              '@type': PaymentItem
          paymentMethod:
            id: 15492MIFB865654
            href: 'https://host:port/paymentMethodManagement/v5/paymentMethod/15492MIFB865654'
            '@referredType': Voucher
            '@type': PaymentMethodRef
          payer:
            '@type': RelatedPartyOrPartyRole
            role: payer
            partyOrPartyRole:
              href: 'https://host:port/tmf-api/partyManagement/v5/individual/2777'
              id: '2777'
              name: John Doe
              '@type': PartyRoleRef
              '@referredType': Individual
        - id: '369258'
          href: 'https://host:port/paymentManagement/v5/payment/369258'
          correlatorId: '632147'
          paymentDate: '2020-01-08T12:06:38.230Z'
          name: 'Example #2'
          status: done
          statusDate: '2020-01-08T12:06:38.230Z'
          '@type': Payment
          amount:
            unit: EUR
            value: 7.24
          taxAmount:
            unit: EUR
            value: 1.16
          totalAmount:
            unit: EUR
            value: 8.4
          channel:
            id: channel1
            name: WEB Portal
            '@type': ChannelRef
          account:
            id: '44444'
            href: 'https://host:port/accountManagement/v5/account/44444'
            name: Telco fusion account
            description: Michel Valette's telco account
            '@type': AccountRef
            '@referredType': PartyAccount
          paymentMethod:
            id: 15492MIFB865654
            href: 'https://host:port/paymentMethodManagement/v5/paymentMethod/15492MIFB865654'
            '@referredType': Voucher
            '@type': PaymentMethodRef
          payer:
            id: '3333333333333'
            href: 'https://host:port/partyManagement/v5/individual/3333333333333'
            name: Jean Pontus
            role: payer
            '@type': RelatedPartyOrPartyRole
            '@referredType': Individual
      description: >-
        Here is an example of a request for retrieving a list of payment(s). The given criteria is
        the correlatorId.
    Payment_list_example_21_response:
      value:
        - id: '987321462'
          href: 'https://host:port/paymentManagement/v5/payment/987321462'
          paymentDate: '2020-01-15T17:42:06.120Z'
          name: 'Example #3'
          status: done
          statusDate: '2020-01-15T17:42:06.120Z'
          '@type': Payment
          amount:
            unit: EUR
            value: 27
          taxAmount:
            unit: EUR
            value: 4.32
          totalAmount:
            unit: EUR
            value: 31.32
          channel:
            id: channel1
            name: WEB Portal
            '@type': ChannelRef
          account:
            id: '849897498'
            href: 'https://host:port/accountManagement/v5/account/849897498'
            description: John Doe personnal account
            '@type': AccountRef
            '@referredType': PartyAccount
          paymentMethod:
            id: 15492MIFB865654
            href: 'https://host:port/paymentMethodManagement/v5/paymentMethod/15492MIFB865654'
            '@referredType': Voucher
            '@type': PaymentMethodRef
          payer:
            '@type': RelatedPartyOrPartyRole
            role: payer
            partyOrPartyRole:
              href: 'https://host:port/tmf-api/partyManagement/v5/individual/2777'
              id: '2777'
              name: John Doe
              '@type': PartyRoleRef
              '@referredType': Individual
      description: >-
        Here is an example of a request for retrieving a list of payment(s). The given criteria is a
        date range.
    Payment_retrieve_example_response:
      value:
        id: '12345'
        href: 'https://host:port/paymentManagement/v5/payment/12345'
        correlatorId: '67890'
        paymentDate: '2020-01-08T12:06:38.230Z'
        name: Example
        description: a payment example
        status: done
        statusDate: '2020-01-08T12:06:38.230Z'
        '@type': Payment
        amount:
          unit: EUR
          value: 10
        taxAmount:
          unit: EUR
          value: 1.6
        totalAmount:
          unit: EUR
          value: 11.6
        channel:
          id: channel1
          name: WEB Portal
          '@type': ChannelRef
        account:
          id: '44444'
          href: 'https://host:port/accountManagement/v5/account/44444'
          name: Telco fusion account
          description: Michel Valette's telco account
          '@type': AccountRef
          '@referredType': PartyAccount
        paymentItem:
          - id: '1'
            amount:
              unit: EUR
              value: 6
            taxAmount:
              unit: EUR
              value: 0.96
            totalAmount:
              unit: EUR
              value: 6.96
            item:
              id: '1234'
              href: 'https://host:port/customerBillManagement/v5/customerBill/1234'
              '@type': EntityRef
              '@referredType': CustomerBill
            '@type': PaymentItem
          - id: '2'
            amount:
              unit: EUR
              value: 4
            taxAmount:
              unit: EUR
              value: 0.64
            totalAmount:
              unit: EUR
              value: 4.64
            item:
              id: '666'
              href: 'https://host:port/productOrdering/v5/productOrder/666'
              '@type': EntityRef
              '@referredType': ProductOrder
            '@type': PaymentItem
        paymentMethod:
          id: 15492MIFB865654
          href: 'https://host:port/paymentMethodManagement/v5/paymentMethod/15492MIFB865654'
          '@referredType': Voucher
          '@type': PaymentMethodRef
        payer:
          '@type': RelatedPartyOrPartyRole
          role: payer
          partyOrPartyRole:
            href: 'https://host:port/tmf-api/partyManagement/v5/individual/2777'
            id: '2777'
            name: John Doe
            '@type': PartyRoleRef
            '@referredType': Individual
      description: >-
        The example below includes the attributes within the Payment resource model that must be
        included in the query response.
    AuthorizePayment_request_list_example_response:
      value:
        - id: '899999'
          href: 'https://host:port/paymentManagement/v5/authorizePayment/899999'
          state: inProgress
          authorizePaymentDate: '2024-04-29T12:06:38.230Z'
          authorizedPaymentDate: '2024-05-01T12:06:38.230Z'
          authorizedPayment:
            id: '65555'
            href: 'https://host:port/paymentManagement/v5/payment/65555'
            name: Some payment
            description: Payment related to this authorization
            '@type': PaymentRef
          '@type': AuthorizePayment
        - id: '999999'
          href: 'https://host:port/paymentManagement/v5/authorizePayment/999999'
          state: inProgress
          authorizePaymentDate: '2024-04-29T12:06:38.230Z'
          authorizedPaymentDate: '2024-05-01T12:06:38.230Z'
          authorizedPayment:
            id: '55555'
            href: 'https://host:port/paymentManagement/v5/payment/55555'
            name: Some payment
            description: Payment related to this authorization
            '@type': PaymentRef
          '@type': AuthorizePayment
      description: Here is an example of a response for retrieving a list of  payments authorizations
    AuthorizePayment_retrieve_example_response:
      value:
        id: '999999'
        href: 'https://host:port/paymentManagement/v5/authorizePayment/999999'
        state: inProgress
        authorizePaymentDate: '2024-04-29T12:06:38.230Z'
        authorizedPaymentDate: '2024-05-01T12:06:38.230Z'
        authorizedPayment:
          id: '55555'
          href: 'https://host:port/paymentManagement/v5/payment/55555'
          name: Some payment
          description: Payment related to this authorization
          '@type': PaymentRef
        '@type': AuthorizePayment
      description: >-
        The example below includes the attributes within the AuthorizePayment resource model that
        must be included in the query response.
    Initiate_Payment_request_list_example_response:
      value:
        - id: '999998'
          href: 'https://host:port/paymentManagement/v5/initiatePayment/999998'
          name: Example of a Initiate Payment get response
          description: Payment for the order 999
          state: inProgress
          initiatePaymentDate: '2024-05-01T12:10:38.230Z'
          initiatedPaymentDate: '2024-05-02T12:10:38.230Z'
          authorizedPayment:
            id: '888888'
            href: 'https://host:port/paymentManagement/v5/authorizePayment/888887'
            name: Authorization for some payment
            description: Authorization for the payment
            '@type': AuthorizePaymentRef
          initiatedPayment:
            id: '55555'
            href: 'https://host:port/paymentManagement/v5/payment/55554'
            name: Some payment
            description: Payment related to this authorization
            '@type': PaymentRef
          '@type': InitiatePayment
        - id: '999999'
          href: 'https://host:port/paymentManagement/v5/initiatePayment/999999'
          name: Example of a Initiate Payment get response
          description: Payment for the order 999
          state: inProgress
          initiatePaymentDate: '2024-05-01T12:10:38.230Z'
          initiatedPaymentDate: '2024-05-02T12:10:38.230Z'
          authorizedPayment:
            id: '888888'
            href: 'https://host:port/paymentManagement/v5/authorizePayment/888888'
            name: Authorization for some payment
            description: Authorization for the payment
            '@type': AuthorizePaymentRef
          initiatedPayment:
            id: '55555'
            href: 'https://host:port/paymentManagement/v5/payment/55555'
            name: Some payment
            description: Payment related to this authorization
            '@type': PaymentRef
          '@type': InitiatePayment
      description: Here is an example of a response for retrieving a list of initiated payments
    Initiate_Payment_retrieve_example_response:
      value:
        id: '199999'
        href: 'https://host:port/paymentManagement/v5/initiatePayment/199999'
        name: Example of a Initiate Payment get response
        description: Payment for the order 111
        state: inProgress
        initiatePaymentDate: '2024-05-01T12:10:38.230Z'
        initiatedPaymentDate: '2024-05-02T12:10:38.230Z'
        authorizedPayment:
          id: '188888'
          href: 'https://host:port/paymentManagement/v5/authorizePayment/188888'
          name: Authorization for some payment
          description: Authorization for the payment
          '@type': AuthorizePaymentRef
        initiatedPayment:
          id: '55551'
          href: 'https://host:port/paymentManagement/v5/payment/55551'
          name: Some payment
          description: Payment related to this authorization
          '@type': PaymentRef
        '@type': InitiatePayment
      description: >-
        The example below includes the attributes within the InitiatePayment resource model that
        must be included in the query response.
    Cancel_Authorized_Payment_request_list_example_response:
      value:
        - id: '99990000'
          description: Task resource for requesting an initiated payment cancellation
          '@type': CancelAuthorizedPayment
          href: 'https://host:port/paymentManagement/v5/cancelAuthorizedPayment/99990000'
          state: inProgress
          cancellationReason: Customer cancelled the order
          cancelAuthorizedPaymentDate: '2024-04-29T12:06:38.230Z'
          cancelledAuthorizedPaymentDate: '2024-05-01T12:06:38.230Z'
          authorizedPayment:
            id: '888800'
            href: 'https://host:port/paymentManagement/v5/authorizePayment/888800'
            name: Authorization for some payment
            description: Authorization for the payment
            '@type': AuthorizePaymentRef
        - id: '99991111'
          description: Task resource for requesting an initiated payment cancellation
          '@type': CancelAuthorizedPayment
          href: 'https://host:port/paymentManagement/v5/cancelAuthorizedPayment/99991111'
          state: inProgress
          cancellationReason: Customer cancelled the order
          cancelAuthorizedPaymentDate: '2024-04-29T12:06:38.230Z'
          cancelledAuthorizedPaymentDate: '2024-05-01T12:06:38.230Z'
          authorizedPayment:
            id: '888888'
            href: 'https://host:port/paymentManagement/v5/authorizePayment/888888'
            name: Authorization for some payment
            description: Authorization for the payment
            '@type': AuthorizePaymentRef
      description: >-
        Here is an example of a response for retrieving a list of  payments authorizations
        cancellation
    Cancel_Authorized_payment_retrieve_example_response:
      value:
        id: '99991111'
        description: Task resource for requesting an initiated payment cancellation
        '@type': CancelAuthorizedPayment
        href: 'https://host:port/paymentManagement/v5/cancelAuthorizedPayment/99991111'
        state: inProgress
        cancellationReason: Customer cancelled the order
        cancelAuthorizedPaymentDate: '2024-04-29T12:06:38.230Z'
        cancelledAuthorizedPaymentDate: '2024-05-01T12:06:38.230Z'
        authorizedPayment:
          id: '888888'
          href: 'https://host:port/paymentManagement/v5/authorizePayment/888888'
          name: Authorization for some payment
          description: Authorization for the payment
          '@type': AuthorizePaymentRef
      description: >-
        The example below includes the attributes within the CancelAuthorizedPayment resource model
        that must be included in the query response.
    Refund_list_example_response:
      value:
        - id: '23456'
          href: 'https://host:port/paymentManagement/v5/refund/23456'
          name: Example of a Refund resource
          description: Refund due to order 666 cancellation
          refundDate: '2020-01-11T12:06:38.230Z'
          status: authorized
          statusDate: '2017-05-11T12:10:38.230Z'
          '@type': Refund
          amount:
            amount: 10
            units: EUR
          taxAmount:
            amount: 1.6
            units: EUR
          totalAmount:
            amount: 11.6
            units: EUR
          channel:
            id: channel1
            href: 'https://host:port/channel/v5/channel/channel1'
            name: WEB Portal
            '@type': ChannelRef
          account:
            id: '856654654'
            href: 'https://host:port/accountManagement/v5/account/856654654'
            name: Telco fusion account
            description: John Doe’s telco account
            '@type': AccountRef
            '@referredType': PartyAccount
          paymentMethod:
            id: 15492MIFB865654
            href: 'https://host:port/paymentMethodManagement/v5/paymentMethod/15492MIFB865654'
            '@referredType': Voucher
            '@type': PaymentMethodRef
          payment:
            id: '55555'
            href: 'https://host:port/paymentManagement/v5/payment/55555'
            name: Some payment
            description: Payment related to this refund
            '@type': PaymentRef
          requestor:
            role: premium client advisor
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              href: 'https://host:port/tmf-api/partyManagement/v5/individual/2777'
              id: '2777'
              name: John Doe
              '@type': PartyRoleRef
              '@referredType': Individual
        - id: '987634'
          href: 'https://host:port/paymentManagement/v5/refund/987634'
          name: Another example of a Refund resource
          description: Compensation for downtime
          refundDate: '2020-01-11T12:06:38.230Z'
          status: confirmed
          statusDate: '2020-01-11T12:10:38.230Z'
          '@type': Refund
          amount:
            amount: 4
            units: EUR
          taxAmount:
            amount: 0.3
            units: EUR
          totalAmount:
            amount: 4.3
            units: EUR
          '`chann`el':
            id: channel4
            href: 'https://host:port/channel/v5/channel/channel4'
            name: Call Center
            '@type': ChannelRef
          account:
            id: '44444'
            href: 'https://host:port/accountManagement/v5/account/44444'
            name: Telco fusion account
            description: Michel Valette's telco account
            '@type': AccountRef
            '@referredType': PartyAccount
          paymentMethod:
            id: 15492MIFB865654
            href: 'https://host:port/paymentMethodManagement/v5/paymentMethod/15492MIFB865654'
            '@referredType': Voucher
            '@type': PaymentMethodRef
          requestor:
            role: premium client advisor
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              href: 'https://host:port/tmf-api/partyManagement/v5/individual/2777'
              id: '2777'
              name: John Doe
              '@type': PartyRoleRef
              '@referredType': Individual
      description: >-
        Here is an example of a request for retrieving a list of refund(s) requested by a given
        requestor
    Refund_retrieve_example_response:
      value:
        id: '23456'
        href: 'https://host:port/paymentManagement/v5/refund/23456'
        name: Example of a Refund resource
        description: Refund due to order 666 cancellation
        refundDate: '2020-01-11T12:06:38.230Z'
        status: authorized
        statusDate: '2017-05-11T12:10:38.230Z'
        '@type': Refund
        amount:
          amount: 10
          units: EUR
        taxAmount:
          amount: 1.6
          units: EUR
        totalAmount:
          amount: 11.6
          units: EUR
        channel:
          id: channel1
          name: WEB Portal
          '@type': ChannelRef
        account:
          id: '856654654'
          href: 'https://host:port/accountManagement/v5/account/856654654'
          name: Telco fusion account
          description: John Doe’s telco account
          '@type': AccountRef
          '@referredType': PartyAccount
        paymentMethod:
          id: 15492MIFB865654
          href: 'https://host:port/paymentMethodManagement/v5/paymentMethod/15492MIFB865654'
          '@referredType': Voucher
          '@type': PaymentMethodRef
        payment:
          id: '55555'
          href: 'https://host:port/paymentManagement/v5/payment/55555'
          name: Some payment
          description: Payment related to this refund
          '@type': PaymentRef
        requestor:
          role: premium client advisor
          '@type': RelatedPartyOrPartyRole
          partyOrPartyRole:
            href: 'https://host:port/tmf-api/partyManagement/v5/individual/2777'
            id: '2777'
            name: John Doe
            '@type': PartyRoleRef
            '@referredType': Individual
      description: >-
        The example below includes the attributes within the Refund resource model that must be
        included in the query response.
    Payment_Create_example_request:
      value:
        name: Example
        description: a payment example
        '@type': Payment
        amount:
          unit: EUR
          value: 10
        taxAmount:
          unit: EUR
          value: 1.6
        totalAmount:
          unit: EUR
          value: 11.6
        channel:
          id: channel1
          name: WEB Portal
          '@type': ChannelRef
        account:
          id: '15463151'
          href: 'https://host:port/accountManagement/v5/account/15463151'
          name: Telco fusion account
          description: Jean Pontus's telco account
          '@type': AccountRef
          '@referredType': PartyAccount
        paymentItem:
          - id: '1'
            amount:
              unit: EUR
              value: 6
            taxAmount:
              unit: EUR
              value: 0.96
            totalAmount:
              unit: EUR
              value: 6.96
            item:
              id: '1234'
              href: 'https://host:port/customerBillManagement/v5/customerBill/1234'
              '@type': EntityRef
              '@referredType': CustomerBill
            '@type': PaymentItem
          - id: '2'
            amount:
              unit: EUR
              value: 4
            taxAmount:
              unit: EUR
              value: 0.64
            totalAmount:
              unit: EUR
              value: 4.64
            item:
              id: '666'
              href: 'https://host:port/productOrdering/v5/productOrder/666'
              '@type': EntityRef
              '@referredType': ProductOrder
            '@type': PaymentItem
        paymentMethod:
          id: 15492MIFB865654
          href: 'https://host:port/paymentMethodManagement/v5/paymentMethod/15492MIFB865654'
          '@referredType': Voucher
          '@type': PaymentMethodRef
        payer:
          '@type': RelatedPartyOrPartyRole
          role: payer
          partyOrPartyRole:
            href: 'https://host:port/tmf-api/partyManagement/v5/individual/2777'
            id: '2777'
            name: John Doe
            '@type': PartyRoleRef
            '@referredType': Individual
      description: Here is an example of a request for creating a payment.
    Payment_Create_example_response:
      value:
        id: '12345'
        href: 'https://host:port/paymentManagement/v5/payment/12345'
        paymentDate: '2020-01-08T12:06:38.230Z'
        name: Example
        description: a payment example
        status: initialized
        statusDate: '2020-01-08T12:06:38.230Z'
        '@type': Payment
        amount:
          unit: EUR
          value: 10
        taxAmount:
          unit: EUR
          value: 1.6
        totalAmount:
          unit: EUR
          value: 11.6
        channel:
          id: channel1
          name: WEB Portal
          '@type': ChannelRef
        account:
          id: '15463151'
          href: 'https://host:port/accountManagement/v5/account/15463151'
          name: Telco fusion account
          description: Jean Pontus's telco account
          '@type': AccountRef
          '@referredType': PartyAccount
        paymentItem:
          - '@type': PaymentItem
            id: '1'
            amount:
              unit: EUR
              value: 6
            taxAmount:
              unit: EUR
              value: 0.96
            totalAmount:
              unit: EUR
              value: 6.96
            item:
              id: '1234'
              href: 'https://host:port/customerBillManagement/v5/customerBill/1234'
              '@type': EntityRef
              '@referredType': CustomerBill
          - '@type': PaymentItem
            id: '2'
            amount:
              unit: EUR
              value: 4
            taxAmount:
              unit: EUR
              value: 0.64
            totalAmount:
              unit: EUR
              value: 4.64
            item:
              id: '666'
              href: 'https://host:port/productOrdering/v5/productOrder/666'
              '@type': EntityRef
              '@referredType': ProductOrder
        paymentMethod:
          id: 15492MIFB865654
          href: 'https://host:port/paymentMethodManagement/v5/paymentMethod/15492MIFB865654'
          '@referredType': Voucher
          '@type': PaymentMethodRef
        payer:
          '@type': RelatedPartyOrPartyRole
          role: payer
          partyOrPartyRole:
            href: 'https://host:port/tmf-api/partyManagement/v5/individual/2777'
            id: '2777'
            name: John Doe
            '@type': PartyRoleRef
            '@referredType': Individual
      description: Here is an example of a response for creating a payment.
    Authorize_Payment_Create_example_request:
      value:
        '@type': AuthorizePayment
        id: '55555'
        href: 'https://host:port/paymentManagement/v5/payment/55555'
        state: acknowledged
        name: Some payment
        description: Payment related to this authorization
        authorizePaymentDate: '2024-04-29T12:06:38.230Z'
        authorizedPayment:
          id: '55555'
          href: 'https://host:port/paymentManagement/v5/payment/55555'
          name: Some payment
          description: Payment related to this authorization
          '@type': PaymentRef
      description: Here is an example of a request for initiating a payment
    Authorize_Payment_Create_example_response:
      value:
        id: '12345678'
        href: 'https://host:port/paymentManagement/v5/authorizePayment/12345678'
        state: inProgress
        authorizedPaymentDate: '2024-05-01T12:06:38.230Z'
        '@type': AuthorizePayment
      description: Here is an example of a response for authorizing a payment.
    Initiate_Payment_Create_example_request:
      value:
        description: Payment for the order 666
        initiatePaymentDate: '2024-05-01T12:10:38.230Z'
        authorizedPayment:
          id: '888888'
          href: 'https://host:port/paymentManagement/v5/authorizedPayment/888888'
          name: Authorization for some payment
          description: Authorization for the payment
          '@type': AuthorizePaymentRef
        '@type': InitiatePayment
      description: Here is an example of a request for initiating a payment
    Initiate_Payment_Create_example_response:
      value:
        id: '12345678'
        href: 'https://host:port/paymentManagement/v5/initiatePayment/12345678'
        state: inProgress
        initiatedPaymentDate: '2024-05-03T12:10:38.230Z'
        '@type': InitiatePayment
      description: Here is an example of a response for initiating a payment.
    Cancel_Authorized_Payment_Create_example_request:
      value:
        description: Task resource for requesting an initiated payment cancellation
        '@type': CancelAuthorizedPayment
        state: acknowledged
        cancellationReason: Customer cancelled the order
        cancelAuthorizedPaymentDate: '2024-04-29T12:06:38.230Z'
        authorizedPayment:
          id: '888888'
          name: Authorization for some payment
          description: Authorization for the payment
          '@type': AuthorizePaymentRef
      description: Here is an example of a request for cancelling an initiated a payment
    Cancel_Authorized_Payment_Create_example_response:
      value:
        id: '99991111'
        '@type': CancelAuthorizedPayment
        href: 'https://host:port/paymentManagement/v5/cancelAuthorizedPayment/99991111'
        state: inProgress
        cancelledAuthorizedPaymentDate: '2024-05-01T12:06:38.230Z'
        authorizedPayment:
          id: '888888'
          href: 'https://host:port/paymentManagement/v5/authorizePayment/888888'
          name: Authorization for some payment
          description: Authorization for the payment
          '@type': AuthorizePaymentRef
      description: Here is an example of a response for cancelling an authorized a payment.
    Refund_Create_example_request:
      value:
        name: Example of a Refund resource
        description: Refund due to order 666 cancellation
        '@type': Refund
        amount:
          amount: 10
          units: EUR
        taxAmount:
          amount: 1.6
          units: EUR
        totalAmount:
          amount: 11.6
          units: EUR
        channel:
          id: channel1
          name: WEB Portal
          '@type': ChannelRef
        account:
          id: '856654654'
          href: 'https://host:port/accountManagement/v5/account/856654654'
          name: Telco fusion account
          description: John Doe’s telco account
          '@type': AccountRef
          '@referredType': PartyAccount
        paymentMethod:
          id: 15492MIFB865654
          href: 'https://host:port/paymentMethodManagement/v5/paymentMethod/15492MIFB865654'
          '@referredType': Voucher
          '@type': PaymentMethodRef
        payment:
          id: '55555'
          href: 'https://host:port/paymentManagement/v5/payment/55555'
          name: Some payment
          description: Payment related to this refund
          '@type': PaymentRef
        requestor:
          role: premium client advisor
          '@type': RelatedPartyOrPartyRole
          partyOrPartyRole:
            href: 'https://host:port/tmf-api/partyManagement/v5/individual/2777'
            id: '2777'
            name: John Doe
            '@type': PartyRoleRef
            '@referredType': Individual
      description: Here is an example of a request for creating a refund.
    Refund_Create_example_response:
      value:
        id: '23456'
        href: 'https://host:port/paymentManagement/v5/refund/23456'
        name: Example of a Refund resource
        description: Refund due to order 666 cancellation
        refundDate: '2020-01-11T12:06:38.230Z'
        status: authorized
        statusDate: '2017-05-11T12:10:38.230Z'
        '@type': Refund
        amount:
          amount: 10
          units: EUR
        taxAmount:
          amount: 1.6
          units: EUR
        totalAmount:
          amount: 11.6
          units: EUR
        channel:
          id: channel1
          name: WEB Portal
          '@type': ChannelRef
        account:
          id: '856654654'
          href: 'https://host:port/accountManagement/v5/account/856654654'
          name: Telco fusion account
          description: John Doe’s telco account
          '@type': AccountRef
          '@referredType': PartyAccount
        paymentMethod:
          id: 15492MIFB865654
          href: 'https://host:port/paymentMethodManagement/v5/paymentMethod/15492MIFB865654'
          '@referredType': Voucher
          '@type': PaymentMethodRef
        payment:
          id: '55555'
          href: 'https://host:port/paymentManagement/v5/payment/55555'
          name: Some payment
          description: Payment related to this refund
          '@type': PaymentRef
        requestor:
          role: premium client advisor
          '@type': RelatedPartyOrPartyRole
          partyOrPartyRole:
            href: 'https://host:port/tmf-api/partyManagement/v5/individual/2777'
            id: '2777'
            name: John Doe
            '@type': PartyRoleRef
            '@referredType': Individual
      description: Here is an example of a response for creating a refund.
    paymentCreate_request:
      value:
        event:
          correlationId: e94f4858-27a9
          description: PaymentCreateEvent illustration
          domain: Commercial
          eventId: 4bc7-b850-e9505aee0f8a
          eventTime: '2022-08-25T12:25:34.843Z'
          eventType: PaymentCreateEvent
          priority: '2'
          timeOcurred: '2022-08-25T12:25:34.479Z'
          title: PaymentCreateEvent
          id: '999'
          Payment:
            id: '12345'
            href: 'https://host:port/paymentManagement/v5/payment/12345'
            correlatorId: '67890'
            paymentDate: '2020-01-08T12:06:38.230Z'
            name: Example
            description: a payment example
            authorizationCode: XYZ
            status: done
            statusDate: '2020-01-08T12:06:38.230Z'
            '@type': Payment
            amount:
              unit: EUR
              value: 10
            taxAmount:
              unit: EUR
              value: 1.6
            totalAmount:
              unit: EUR
              value: 11.6
            channel:
              id: channel1
              name: WEB Portal
              '@type': ChannelRef
            account:
              id: '44444'
              href: 'https://host:port/accountManagement/v5/account/44444'
              name: Telco fusion account
              description: Michel Valette's telco account
              '@type': AccountRef
              '@referredType': billingAccount
            paymentItem:
              - id: '1'
                amount:
                  unit: EUR
                  value: 6
                taxAmount:
                  unit: EUR
                  value: 0.96
                totalAmount:
                  unit: EUR
                  value: 6.96
                item:
                  id: '1234'
                  href: 'https://host:port/customerBillManagement/v5/customerBill/1234'
                  '@type': EntityRef
                  '@referredType': CustomerBill
                '@type': PaymentItem
              - id: '2'
                amount:
                  unit: EUR
                  value: 4
                taxAmount:
                  unit: EUR
                  value: 0.64
                totalAmount:
                  unit: EUR
                  value: 4.64
                item:
                  id: '666'
                  href: 'https://host:port/productOrdering/v5/productOrder/666'
                  '@type': EntityRef
                  '@referredType': ProductOrder
                '@type': PaymentItem
            paymentMethod:
              id: 15492MIFB865654
              href: 'https://host:port/paymentMethodManagement/v5/paymentMethod/15492MIFB865654'
              '@referredType': Voucher
              '@type': PaymentMethodRef
            payer:
              '@type': RelatedPartyRefOrPartyRoleRef
              role: payer
              partyOrPartyRole:
                href: 'https://host:port/tmf-api/partyManagement/v5/individual/2777'
                id: '2777'
                name: John Doe
                '@type': PartyRoleRef
                '@referredType': Individual
        reportingSystem:
          id: '341'
          name: APP-887
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '237'
          name: APP-443
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': PaymentCreateEvent
      description: Message example for PaymentCreateEvent event
    paymentAttributeValueChange_request:
      value:
        event:
          correlationId: e94f4858-27a9
          description: PaymentAttributeValueChangeEvent illustration
          domain: Commercial
          eventId: 4bc7-b850-e9505aee0f8a
          eventTime: '2022-08-25T12:25:34.843Z'
          eventType: PaymentAttributeValueChangeEvent
          priority: '2'
          timeOcurred: '2022-08-25T12:25:34.479Z'
          title: PaymentAttributeValueChangeEvent
          PaymentAttributeValueChangeEventPayload:
            id: '999'
            Payment:
              id: '12345'
              href: 'https://host:port/paymentManagement/v5/payment/12345'
              correlatorId: '67890'
              paymentDate: '2020-01-08T12:06:38.230Z'
              name: Example
              description: a payment example
              authorizationCode: XYZ
              status: done
              statusDate: '2020-01-08T12:06:38.230Z'
              '@type': Payment
              amount:
                unit: EUR
                value: 10
              taxAmount:
                unit: EUR
                value: 1.6
              totalAmount:
                unit: EUR
                value: 11.6
              channel:
                id: channel1
                name: WEB Portal
                '@type': ChannelRef
              account:
                id: '44444'
                href: 'https://host:port/accountManagement/v5/account/44444'
                name: Telco fusion account
                description: Michel Valette's telco account
                '@type': AccountRef
                '@referredType': billingAccount
              paymentItem:
                - id: '1'
                  amount:
                    unit: EUR
                    value: 6
                  taxAmount:
                    unit: EUR
                    value: 0.96
                  totalAmount:
                    unit: EUR
                    value: 6.96
                  item:
                    id: '1234'
                    href: 'https://host:port/customerBillManagement/v5/customerBill/1234'
                    '@type': EntityRef
                    '@referredType': CustomerBill
                  '@type': PaymentItemRef
                - id: '2'
                  amount:
                    unit: EUR
                    value: 4
                  taxAmount:
                    unit: EUR
                    value: 0.64
                  totalAmount:
                    unit: EUR
                    value: 4.64
                  item:
                    id: '666'
                    href: 'https://host:port/productOrdering/v5/productOrder/666'
                    '@type': EntityRef
                    '@referredType': ProductOrder
                  '@type': PaymentItemRef
              paymentMethod:
                id: 15492MIFB865654
                href: 'https://host:port/paymentMethodManagement/v5/paymentMethod/15492MIFB865654'
                '@referredType': Voucher
                '@type': PaymentMethodRef
              payer:
                '@type': RelatedPartyRefOrPartyRoleRef
                role: payer
                partyOrPartyRole:
                  href: 'https://host:port/tmf-api/partyManagement/v5/individual/2777'
                  id: '2777'
                  name: John Doe
                  '@type': PartyRoleRef
                  '@referredType': Individual
        reportingSystem:
          id: '341'
          name: APP-887
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '237'
          name: APP-443
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': PaymentAttributeValueChangeEvent
      description: Message example for PaymentAttributeValueChangeEvent event
    paymentStateChange_request:
      value:
        event:
          correlationId: e94f4858-27a9
          description: PaymentStateChangeEvent illustration
          domain: Commercial
          eventId: 4bc7-b850-e9505aee0f8a
          eventTime: '2022-08-25T12:25:34.843Z'
          eventType: PaymentStateChangeEvent
          priority: '2'
          timeOcurred: '2022-08-25T12:25:34.479Z'
          title: PaymentStateChangeEvent
          PaymentStateChangeEventPayload:
            id: '0000'
            Payment:
              id: '12345'
              href: 'https://host:port/paymentManagement/v5/payment/12345'
              status: done
              '@type': Payment
        reportingSystem:
          id: '341'
          name: APP-887
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '237'
          name: APP-443
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': PaymentStateChangeEvent
      description: Message example for PaymentStateChangeEvent event with ?fields=state property only
    paymentDelete_request:
      value:
        event:
          correlationId: e94f4858-27a9
          description: PaymentDeleteEvent illustration
          domain: Commercial
          eventId: 4bc7-b850-e9505aee0f8a
          eventTime: '2022-08-25T12:25:34.843Z'
          eventType: PaymentDeleteEvent
          priority: '2'
          timeOcurred: '2022-08-25T12:25:34.479Z'
          title: PaymentDeleteEvent
          PaymentDeleteEventPayload:
            id: '000'
            Payment:
              id: '12345'
              href: 'https://host:port/paymentManagement/v5/payment/12345'
              '@type': Payment
        reportingSystem:
          id: '341'
          name: APP-887
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '237'
          name: APP-443
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': PaymentDeleteEvent
      description: Message example for PaymentDeleteEvent event
    authorizePaymentCreate_request:
      value:
        event:
          AuthorizePaymentDeleteEventPayload:
            id: '000'
            AuthorizePayment:
              id: '9999'
              '@type': AuthorizePayment
              href: 'https://host:port/paymentManagement/v5/authorizePayment/9999'
              description: AuthorizePaymentCreateEventPayload generic structure
              state: inProgress
              authorizePaymentDate: '2022-08-25T12:25:34.479Z'
              authorizedPaymentDate: '2022-08-25T12:25:34.479Z'
              authorizedPayment:
                id: '55555'
                href: 'https://host:port/paymentManagement/v5/payment/55555'
                name: Some payment
                description: Payment related to this authorization
                '@type': PaymentRef
          correlationId: e94f4858-27a9
          description: AuthorizePaymentCreateEvent illustration
          domain: Commercial
          eventId: 4bc7-b850-e9505aee0f8a
          eventTime: '2022-08-25T12:25:34.843Z'
          eventType: AuthorizePaymentCreateEvent
          priority: '2'
          timeOcurred: '2022-08-25T12:25:34.479Z'
          title: AuthorizePaymentCreateEvent
        reportingSystem:
          id: '341'
          name: APP-887
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '237'
          name: APP-443
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': AuthorizePaymentCreateEvent
      description: Message example for PaymentAuthorizationCreateEvent event
    authorizePaymentAttributeValueChange_request:
      value:
        event:
          AuthorizePaymentAttributeValueChangeEventPayload:
            id: '9099'
            AuthorizePayment:
              id: '9999'
              description: AuthorizePaymentAttributeValueChangeEventPayload generic structure
              '@type': AuthorizePaymentAttributeValueChangeEvent
              properties:
                href: 'https://host:port/paymentManagement/v5/authorizePayment/9999'
                authorizedPayment:
                  id: '55555'
                  href: 'https://host:port/paymentManagement/v5/payment/55555'
                  name: Some payment
                  description: Payment related to this authorization
                  '@type': PaymentRef
                  authorizePaymentDate: '2022-08-25T12:25:34.479Z'
                  authorizedPaymentDate: '2022-08-25T12:25:34.479Z'
                  state: acknowledged
            correlationId: e94f4858-27a9
            description: AuthorizePaymentAttributeValueChangeEvent illustration
            domain: Commercial
            eventId: 4bc7-b850-e9505aee0f8a
            eventTime: '2022-08-25T12:25:34.843Z'
            eventType: AuthorizePaymentAttributeValueChangeEvent
            priority: '2'
            timeOcurred: '2022-08-25T12:25:34.479Z'
            title: AuthorizePaymentAttributeValueChangeEvent
        reportingSystem:
          id: '341'
          name: APP-887
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '237'
          name: APP-443
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': AuthorizePaymentAttributeValueChangeEvent
      description: Message example for PaymentAuthorizationAttributeValueChangeEvent event
    authorizePaymentStateChange_request:
      value:
        event:
          id: '9898'
          correlationId: e94f4858-27a9
          description: AuthorizePaymentStateChangeEvent illustration
          domain: Commercial
          eventId: 4bc7-b850-e9505aee0f8a
          eventTime: '2022-08-25T12:25:34.843Z'
          eventType: AuthorizePaymentStateChangeEvent
          priority: '2'
          timeOcurred: '2022-08-25T12:25:34.479Z'
          title: AuthorizePaymentStateChangeEvent
          AuthorizePaymentStateChangeEventPayload:
            id: '999'
            authorizedPayment:
              id: '55555'
              href: 'https://host:port/paymentManagement/v5/payment/55555'
              name: Some payment
              description: Payment related to this authorization
              '@type': PaymentRef
        reportingSystem:
          id: '341'
          name: APP-887
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '237'
          name: APP-443
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': AuthorizePaymentStateChangeEvent
      description: >-
        Message example for PaymentAuthorizationStateChangeEvent event with ?fields=state property
        only
    authorizePaymentDelete_request:
      value:
        event:
          correlationId: e94f4858-27a9
          description: AuthorizePaymentDeleteEvent illustration
          domain: Commercial
          eventId: 4bc7-b850-e9505aee0f8a
          eventTime: '2022-08-25T12:25:34.843Z'
          eventType: AuthorizePaymentDeleteEvent
          priority: '2'
          timeOcurred: '2022-08-25T12:25:34.479Z'
          title: AuthorizePaymentDeleteEvent
          AuthorizePaymentDeleteEventPayload:
            id: '987'
            AuthorizePayment:
              id: '9999'
              '@type': AuthorizePayment
              href: 'https://host:port/paymentManagement/v5/authorizePayment/9999'
        reportingSystem:
          id: '341'
          name: APP-887
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '237'
          name: APP-443
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': AuthorizePaymentDeleteEvent
      description: Message example for PaymentAuthorizationDeleteEvent event
    InitiatePaymentCreate_request:
      value:
        event:
          correlationId: e94f4858-27a9
          description: InitiatePaymentCreateEvent illustration
          domain: Commercial
          eventId: 4bc7-b850-e9505aee0f8a
          eventTime: '2022-08-25T12:25:34.843Z'
          eventType: InitiatePaymentCreateEvent
          priority: '2'
          timeOcurred: '2022-08-25T12:25:34.479Z'
          title: InitiatePaymentCreateEvent
          InitiatePaymentCreateEventPayload:
            id: '999'
            InitiatePayment:
              id: '9999'
              '@type': InitiatePayment
              href: 'https://host:port/paymentManagement/v5/initiatePayment/9999'
              description: InitiatePaymentCreateEventPayload generic structure
              initiatePayment:
                id: '199999'
                href: 'https://host:port/paymentManagement/v5/initiatePayment/199999'
                name: Example of a Initiate Payment event
                description: Payment for the order 111
                state: inProgress
                initiatePaymentDate: '2024-05-01T12:10:38.230Z'
                initiatedPaymentDate: '2024-05-02T12:10:38.230Z'
                authorizedPayment:
                  id: '188888'
                  href: 'https://host:port/paymentManagement/v5/authorizePayment/188888'
                  name: Authorization for some payment
                  description: Authorization for the payment
                  '@type': AuthorizePaymentRef
                initiatedPayment:
                  id: '55551'
                  href: 'https://host:port/paymentManagement/v5/payment/55551'
                  name: Some payment
                  description: Payment related to this authorization
                  '@type': PaymentRef
                '@type': InitiatePayment
        reportingSystem:
          id: '341'
          name: APP-887
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '237'
          name: APP-443
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': InitiatePaymentCreateEvent
      description: Message example for InitiatePaymentCreateEvent event with ?fields=state property only
    InitiatePaymentAttributeValueChange_request:
      value:
        event:
          correlationId: e94f4858-27a9
          description: InitiatePaymentAttributeValueChangeEvent illustration
          domain: Commercial
          eventId: 4bc7-b850-e9505aee0f8a
          eventTime: '2022-08-25T12:25:34.843Z'
          eventType: InitiatePaymentAttributeValueChangeEvent
          priority: '2'
          timeOcurred: '2022-08-25T12:25:34.479Z'
          title: InitiatePaymentAttributeValueChangeEvent
          InitiatePaymentAttributeValueChangeEventPayload:
            id: '987'
            description: InitiatePaymentAttributeValueChangeEventPayload generic structure
            InitiatePayment:
              id: '9999'
              description: InitiatePaymentAttributeValueChangeEventPayload generic structure
              href: 'https://host:port/paymentManagement/v5/initiatePayment/9999'
              '@type': InitiatePayment
              initiatePayment:
                id: '199999'
                href: 'https://host:port/paymentManagement/v5/initiatePayment/199999'
                name: Example of a Initiate Payment event
                description: Payment for the order 111
                state: inProgress
                initiatePaymentDate: '2024-05-01T12:10:38.230Z'
                initiatedPaymentDate: '2024-05-02T12:10:38.230Z'
                authorizedPayment:
                  id: '188888'
                  href: 'https://host:port/paymentManagement/v5/authorizePayment/188888'
                  name: Authorization for some payment
                  description: Authorization for the payment
                  '@type': AuthorizePaymentRef
                initiatedPayment:
                  id: '55551'
                  href: 'https://host:port/paymentManagement/v5/payment/55551'
                  name: Some payment
                  description: Payment related to this authorization
                  '@type': PaymentRef
                '@type': InitiatePayment
        reportingSystem:
          id: '341'
          name: APP-887
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '237'
          name: APP-443
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': InitiatePaymentAttributeValueChangeEvent
      description: >-
        Message example for InitiatePaymentAttributeValueChangeEvent event with ?fields=state
        property only
    InitiatePaymentStateChange_request:
      value:
        event:
          correlationId: e94f4858-27a9
          description: InitiatePaymentStateChangeEvent illustration
          domain: Commercial
          eventId: 4bc7-b850-e9505aee0f8a
          eventTime: '2022-08-25T12:25:34.843Z'
          eventType: InitiatePaymentStateChangeEvent
          priority: '2'
          timeOcurred: '2022-08-25T12:25:34.479Z'
          title: InitiatePaymentStateChangeEvent
          InitiatePaymentStateChangeEvent:
            id: '000'
            InitiatePayment:
              id: '9999'
              '@type': InitiatePayment
              href: 'https://host:port/paymentManagement/v5/initiatePayment/9999'
              description: InitiatePaymentStateChangeEventPayload generic structure
              initiatePayment:
                id: '199999'
                href: 'https://host:port/paymentManagement/v5/initiatePayment/199999'
                state: inProgress
                '@type': InitiatePayment
        reportingSystem:
          id: '341'
          name: APP-887
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '237'
          name: APP-443
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': InitiatePaymentStateChangeEvent
      description: Message example for InitiatePaymentStateChangeEvent event with ?fields=state property only
    InitiatePaymentDelete_request:
      value:
        event:
          correlationId: e94f4858-27a9
          description: InitiatePaymentDeleteEvent illustration
          domain: Commercial
          eventId: 4bc7-b850-e9505aee0f8a
          eventTime: '2022-08-25T12:25:34.843Z'
          eventType: InitiatePaymentDeleteEvent
          priority: '2'
          timeOcurred: '2022-08-25T12:25:34.479Z'
          title: InitiatePaymentDeleteEvent
          InitiatePaymentDeleteEventPayload:
            id: '999'
            InitiatePayment:
              id: '9999'
              '@type': InitiatePayment
              href: 'https://host:port/paymentManagement/v5/initiatePayment/9999'
              description: InitiatePaymentDeleteEventPayload generic structure
              initiatePayment:
                id: '199999'
                href: 'https://host:port/paymentManagement/v5/initiatePayment/199999'
                '@type': InitiatePayment
        reportingSystem:
          id: '341'
          name: APP-887
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '237'
          name: APP-443
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': InitiatePaymentDeleteEvent
      description: Message example for InitiatePaymentDeleteEvent event
    CancelAuthorizedPaymentCreate_request:
      value:
        event:
          correlationId: e94f4858-27a9
          description: CancelAuthorizePaymentCreateEvent illustration
          domain: Commercial
          eventId: 4bc7-b850-e9505aee0f8a
          eventTime: '2022-08-25T12:25:34.843Z'
          eventType: CancelAuthorizePaymentCreateEvent
          priority: '2'
          timeOcurred: '2022-08-25T12:25:34.479Z'
          title: CancelAuthorizePaymentCreateEvent
          CancelAuthorizedPaymentCreateEventPayload:
            id: '989887'
            CancelAuthorizedPayment:
              id: '99991111'
              '@type': CancelAuthorizedPayment
              href: 'https://host:port/paymentManagement/v5/cancelAuthorizedPayment/99991111'
              description: CancelAuthorizePaymentCreateEventPayload generic structure
              state: inProgress
              cancellationReason: Customer cancelled the order
              cancelAuthorizedPaymentDate: '2024-04-29T12:06:38.230Z'
              cancelledAuthorizedPaymentDate: '2024-05-01T12:06:38.230Z'
              authorizedPayment:
                id: '55555'
                href: 'https://host:port/paymentManagement/v5/payment/55555'
                name: Some payment
                description: Payment related to this authorization
                '@type': PaymentRef
        reportingSystem:
          id: '341'
          name: APP-887
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '237'
          name: APP-443
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': CancelAuthorizedPaymentCreateEvent
      description: Message example for CancelAuthorizedPaymentCreateEvent event
    CancelAuthorizedPaymentAttributeValueChange_request:
      value:
        event:
          correlationId: e94f4858-27a9
          description: CancelAuthorizePaymentAttributeValueChange illustration
          domain: Commercial
          eventId: 4bc7-b850-e9505aee0f8a
          eventTime: '2022-08-25T12:25:34.843Z'
          eventType: CancelAuthorizePaymentAttributeValueChange
          priority: '2'
          timeOcurred: '2022-08-25T12:25:34.479Z'
          title: CancelAuthorizePaymentAttributeValueChangeEvent
          CancelAuthorizedPaymentAttributeValueChangeEventPayload:
            id: '9876'
            CancelAuthorizedPayment:
              id: '99991111'
              description: Task resource for requesting an initiated payment cancellation
              '@type': CancelAuthorizedPayment
              href: 'https://host:port/paymentManagement/v5/cancelAuthorizedPayment/99991111'
              state: inProgress
              cancellationReason: Customer cancelled the order
              cancelAuthorizedPaymentDate: '2024-04-29T12:06:38.230Z'
              cancelledAuthorizedPaymentDate: '2024-05-01T12:06:38.230Z'
              authorizedPayment:
                id: '888888'
                href: 'https://host:port/paymentManagement/v5/authorizePayment/888888'
                name: Authorization for some payment
                description: Authorization for the payment
                '@type': AuthorizePaymentRef
        reportingSystem:
          id: '341'
          name: APP-887
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '237'
          name: APP-443
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': CancelAuthorizedPaymentAttributeValueChangeEvent
      description: Message example for CancelAuthorizedPaymentAttributeValueChangeEvent event
    CancelAuthorizedPaymentStateChange_request:
      value:
        event:
          correlationId: e94f4858-27a9
          description: CancelAuthorizedPaymentStatusChangeEvent illustration
          domain: Commercial
          eventId: 4bc7-b850-e9505aee0f8a
          eventTime: '2022-08-25T12:25:34.843Z'
          eventType: CancelAuthorizedPaymentStatusChangeEvent
          priority: '2'
          timeOcurred: '2022-08-25T12:25:34.479Z'
          title: CancelAuthorizedPaymentStatusChangeEvent
          CancelAuthorizedPaymentStateChangeEventPayload:
            id: '999'
            CancelAuthorizedPayment:
              id: '99991111'
              '@type': CancelAuthorizedPayment
              href: 'https://host:port/paymentManagement/v5/cancelAuthorizedPayment/99991111'
              state: inProgress
        reportingSystem:
          id: '341'
          name: APP-887
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '237'
          name: APP-443
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': CancelAuthorizedPaymentStateChangeEvent
      description: >-
        Message example for CancelAuthorizedPaymentStateChangeEvent event with ?fields=state
        property only
    CancelAuthorizedPaymentDelete_request:
      value:
        event:
          correlationId: e94f4858-27a9
          description: CancelAuthorizedPaymentDeleteEvent illustration
          domain: Commercial
          eventId: 4bc7-b850-e9505aee0f8a
          eventTime: '2022-08-25T12:25:34.843Z'
          eventType: CancelAuthorizedPaymentDeleteEvent
          priority: '2'
          timeOcurred: '2022-08-25T12:25:34.479Z'
          title: CancelAuthorizedPaymentDeleteEvent
          CancelAuthorizedPaymentDeleteEventPayload:
            id: 0987
            CancelAuthorizedPayment:
              id: '99991111'
              '@type': CancelAuthorizedPayment
              href: 'https://host:port/paymentManagement/v5/cancelAuthorizedPayment/99991111'
        reportingSystem:
          id: '341'
          name: APP-887
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '237'
          name: APP-443
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': CancelAuthorizedPaymentDeleteEvent
      description: Message example for CancelAuthorizedPaymentDeleteEvent event
    Create_request:
      value:
        event:
          correlationId: e94f4858-27a9
          description: RefundCreateEvent illustration
          domain: Commercial
          eventId: 4bc7-b850-e9505aee0f8a
          eventTime: '2022-08-25T12:25:34.843Z'
          eventType: RefundCreateEvent
          priority: '2'
          timeOcurred: '2022-08-25T12:25:34.479Z'
          title: RefundCreateEvent
          RefundCreateEventPayload:
            id: '000'
            refund:
              id: '23456'
              href: 'http://servername/refund/23456'
              name: Example of a Refund resource
              description: Refund due to order 666 cancellation
              correlatorId: '67890'
              refundDate: '2020-01-11T12:06:38.230Z'
              status: authorized
              statusDate: '2020-01-11T12:10:38.230Z'
              '@type': Refund
              amount:
                unit: EUR
                value: 4
              taxAmount:
                unit: EUR
                value: 0.64
              totalAmount:
                unit: EUR
                value: 4.64
              channel:
                id: channel1
                name: WEB Portal
                '@type': ChannelRef
              account:
                id: '44444'
                href: 'https://host:port/accountManagement/v4/account/44444'
                name: Telco fusion account
                description: Michel Valette's telco account
                '@referredType': billingAccount
              paymentMethod:
                id: 15492MIFB865654
                href: 'https://host:port/paymentMethodManagement/v5/paymentMethod/15492MIFB865654'
                '@referredType': Voucher
                '@type': PaymentMethodRef
              payment:
                id: '12345'
                href: 'https://host:port/paymentManagement/v4/payment/12345'
                name: Some payment
                description: Payment related to this refund
                '@type': PaymentRef
              requestor:
                id: '1234567890'
                href: 'https://host:port/partyManagement/v4/individual/1234567890'
                role: premium client advisor
                name: Jean-Claude Dusse
                '@type': RelatedPartyRefOrPartyRoleRef
                '@referredType': Individual
        reportingSystem:
          id: '341'
          name: APP-887
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '237'
          name: APP-443
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': RefundCreateEvent
      description: Message example for RefundCreateEvent event
    AttributeValueChange_request:
      value:
        event:
          correlationId: 25564882-d248
          description: RefundAttributeValueChangeEvent illustration
          domain: Commercial
          eventId: 491e-b5fc-d9632d474e9c
          eventTime: '2022-08-25T12:25:34.853Z'
          eventType: RefundAttributeValueChangeEvent
          priority: '1'
          timeOcurred: '2022-08-25T12:25:27.698Z'
          title: RefundAttributeValueChangeEvent
          RefundAttributeValueChangeEventPayload:
            id: '000'
            refund:
              href: 'http://servername/refund/23456'
              id: '23456'
              '@type': Refund
              amount:
                unit: EUR
                value: 4
        reportingSystem:
          id: '341'
          name: APP-887
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '237'
          name: APP-443
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': RefundAttributeValueChangeEvent
      description: Message example for RefundAttributeValueChangeEvent event
    StateChange_request:
      value:
        event:
          correlationId: 4ce65320-da33
          description: RefundStateChangeEvent illustration
          domain: Commercial
          eventId: 4edf-8159-f49b95962428
          eventTime: '2022-08-25T12:25:34.861Z'
          eventType: RefundStateChangeEvent
          priority: '1'
          timeOcurred: '2022-08-25T12:25:34.098Z'
          title: RefundStateChangeEvent
          RefundStateChangeEventPayload:
            id: '999'
            refund:
              href: 'http://servername/refund/23456'
              id: '23456'
              '@type': Refund
              status: done
        reportingSystem:
          id: '341'
          name: APP-887
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '237'
          name: APP-443
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': RefundStateChangeEvent
      description: Message example for RefundStateChangeEvent event with ?fields=state property only
    Delete_request:
      value:
        event:
          correlationId: 0dc1de67-dc0c
          description: RefundDeleteEvent illustration
          domain: Commercial
          eventId: 4334-a27f-d2875fc3b9e9
          eventTime: '2022-08-25T12:25:34.871Z'
          eventType: RefundDeleteEvent
          priority: '1'
          timeOcurred: '2022-08-25T12:25:32.575Z'
          title: RefundDeleteEvent
          RefundDeleteEventPayload:
            id: '999'
            refund:
              id: '23456'
              href: 'http://servername/refund/23456'
              name: Example of a Refund resource
              description: Refund due to order 666 cancellation
              correlatorId: '67890'
              refundDate: '2020-01-11T12:06:38.230Z'
              status: authorized
              statusDate: '2020-01-11T12:10:38.230Z'
              '@type': Refund
              amount:
                unit: EUR
                value: 4
              taxAmount:
                unit: EUR
                value: 0.64
              totalAmount:
                unit: EUR
                value: 4.64
              channel:
                id: channel1
                name: WEB Portal
                '@type': ChannelRef
              account:
                id: '44444'
                href: 'https://host:port/accountManagement/v4/account/44444'
                name: Telco fusion account
                description: Michel Valette's telco account
                '@referredType': billingAccount
              paymentMethod:
                id: 15492MIFB865654
                href: 'https://host:port/paymentMethodManagement/v5/paymentMethod/15492MIFB865654'
                '@referredType': Voucher
                '@type': PaymentMethodRef
              payment:
                id: '12345'
                href: 'https://host:port/paymentManagement/v4/payment/12345'
                name: Some payment
                description: Payment related to this refund
                '@type': PaymentRef
              requestor:
                id: '1234567890'
                href: 'https://host:port/partyManagement/v4/individual/1234567890'
                role: premium client advisor
                name: Jean-Claude Dusse
                '@type': RelatedPartyRefOrPartyRoleRef
                '@referredType': Individual
        reportingSystem:
          id: '341'
          name: APP-887
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '237'
          name: APP-443
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': RefundDeleteEvent
      description: Message example for RefundDeleteEvent event
